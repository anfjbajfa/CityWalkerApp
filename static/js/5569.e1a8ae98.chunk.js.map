{"version":3,"file":"static/js/5569.e1a8ae98.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/chip/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/chip/chip.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/chip/chip.scss?tag=calcite-chip&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  title: \"title\",\n  close: \"close\",\n  imageContainer: \"image-container\",\n  chipIcon: \"chip-icon\",\n  textSlotted: \"text--slotted\",\n  container: \"container\",\n  imageSlotted: \"image--slotted\",\n  closable: \"closable\",\n  multiple: \"multiple\",\n  single: \"single\",\n  selectable: \"selectable\",\n  selectIcon: \"select-icon\",\n  selectIconActive: \"select-icon--active\",\n  nonInteractive: \"non-interactive\",\n  isCircle: \"is-circle\",\n  selected: \"selected\",\n};\n\nexport const SLOTS = {\n  image: \"image\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  checkedSingle: \"circle-f\",\n  uncheckedMultiple: \"square\",\n  checkedMultiple: \"check-square-f\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean, slotChangeHasAssignedElement } from \"../../utils/dom\";\nimport { Appearance, Kind, Scale, SelectionMode } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { getIconScale } from \"../../utils/component\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ChipMessages } from \"./assets/chip/t9n\";\nimport { CSS, SLOTS, ICONS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot image - A slot for adding an image.\n */\n@Component({\n  tag: \"calcite-chip\",\n  styleUrl: \"chip.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Chip\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies the appearance style of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"outline\" | \"outline-fill\" | \"solid\", Appearance> =\n    \"solid\";\n\n  /** Specifies the kind of the component, which will apply to border and background if applicable. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"inverse\" | \"neutral\", Kind> = \"neutral\";\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. When contained in a parent `calcite-chip-group` inherits the parent's `scale` value. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** The component's value. */\n  @Prop() value!: any;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  /**\n   * This internal property, managed by a containing `calcite-chip-group`, is\n   * conditionally set based on the `selectionMode` of the parent\n   *\n   * @internal\n   */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"single-persist\" | \"none\", SelectionMode> =\n    \"none\";\n\n  /** When `true`, the component is selected.  */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  watchSelected(selected: boolean): void {\n    if (this.selectionMode === \"none\") {\n      return;\n    }\n    this.handleSelectionPropertyChange(selected);\n  }\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ChipMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ChipMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * When true, enables the chip to be focused, and allows the `calciteChipSelect` to emit.\n   * This is set to `true` by a parent Chip Group component.\n   *\n   * @internal\n   */\n  @Prop() interactive = false;\n\n  /**\n   * @internal\n   */\n  @Prop() parentChipGroup: HTMLCalciteChipGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteChipElement;\n\n  @State() defaultMessages: ChipMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() private hasText = false;\n\n  @State() private hasImage = false;\n\n  private containerEl: HTMLDivElement;\n\n  private closeButtonEl: HTMLButtonElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's close button is selected.\n   */\n  @Event({ cancelable: false }) calciteChipClose: EventEmitter<void>;\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipKeyEvent: EventEmitter<KeyboardEvent>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalChipSelect: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalSyncSelectedChips: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.selectionMode !== \"none\" && this.interactive && this.selected) {\n      this.handleSelectionPropertyChange(this.selected);\n    }\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (isBrowser()) {\n      await setUpMessages(this);\n      this.updateHasText();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.handleEmittingEvent();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n        case \"Home\":\n        case \"End\":\n          this.calciteInternalChipKeyEvent.emit(event);\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"click\")\n  clickHandler(): void {\n    if (!this.interactive && this.closable) {\n      this.closeButtonEl.focus();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    if (!this.disabled && this.interactive) {\n      this.containerEl?.focus();\n    } else if (!this.disabled && this.closable) {\n      this.closeButtonEl?.focus();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (): void => {\n    this.updateHasText();\n  };\n\n  private close = (): void => {\n    this.calciteChipClose.emit();\n    this.selected = false;\n    this.closed = true;\n  };\n\n  private closeButtonKeyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.close();\n    }\n  };\n\n  private updateHasText() {\n    this.hasText = this.el.textContent.trim().length > 0;\n  }\n\n  private handleSlotImageChange = (event: Event): void => {\n    this.hasImage = slotChangeHasAssignedElement(event);\n  };\n\n  private handleEmittingEvent = (): void => {\n    if (this.interactive) {\n      this.calciteChipSelect.emit();\n    }\n  };\n\n  private handleSelectionPropertyChange(selected: boolean): void {\n    if (this.selectionMode === \"single\") {\n      this.calciteInternalSyncSelectedChips.emit();\n    }\n    const selectedInParent = this.parentChipGroup.selectedItems.includes(this.el);\n\n    if (!selectedInParent && selected && this.selectionMode !== \"multiple\") {\n      this.calciteInternalChipSelect.emit();\n    }\n    if (this.selectionMode !== \"single\") {\n      this.calciteInternalSyncSelectedChips.emit();\n    }\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChipImage(): VNode {\n    return (\n      <div class={CSS.imageContainer}>\n        <slot name={SLOTS.image} onSlotchange={this.handleSlotImageChange} />\n      </div>\n    );\n  }\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\"\n        ? this.selected\n          ? ICONS.checkedMultiple\n          : ICONS.uncheckedMultiple\n        : this.selected\n          ? ICONS.checkedSingle\n          : undefined;\n\n    return (\n      <div\n        class={{\n          [CSS.selectIcon]: true,\n          [CSS.selectIconActive]: this.selectionMode === \"multiple\" || this.selected,\n        }}\n      >\n        {icon ? <calcite-icon icon={icon} scale={getIconScale(this.scale)} /> : null}\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return (\n      <button\n        aria-label={this.messages.dismissLabel}\n        class={CSS.close}\n        onClick={this.close}\n        onKeyDown={this.closeButtonKeyDownHandler}\n        ref={(el) => (this.closeButtonEl = el)}\n        tabIndex={this.disabled ? -1 : 0}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderIcon(): VNode {\n    return (\n      <calcite-icon\n        class={CSS.chipIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.icon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n    const disableInteraction = disabled || (!disabled && !this.interactive);\n    const role =\n      this.selectionMode === \"multiple\" && this.interactive\n        ? \"checkbox\"\n        : this.selectionMode !== \"none\" && this.interactive\n          ? \"radio\"\n          : this.interactive\n            ? \"button\"\n            : undefined;\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div\n            aria-checked={\n              this.selectionMode !== \"none\" && this.interactive\n                ? toAriaBoolean(this.selected)\n                : undefined\n            }\n            aria-label={this.label}\n            class={{\n              [CSS.container]: true,\n              [CSS.textSlotted]: this.hasText,\n              [CSS.imageSlotted]: this.hasImage,\n              [CSS.selectable]: this.selectionMode !== \"none\",\n              [CSS.multiple]: this.selectionMode === \"multiple\",\n              [CSS.single]:\n                this.selectionMode === \"single\" || this.selectionMode === \"single-persist\",\n              [CSS.selected]: this.selected,\n              [CSS.closable]: this.closable,\n              [CSS.nonInteractive]: !this.interactive,\n              [CSS.isCircle]:\n                !this.closable &&\n                !this.hasText &&\n                (!this.icon || !this.hasImage) &&\n                (this.selectionMode === \"none\" ||\n                  (!!this.selectionMode && this.selectionMode !== \"multiple\" && !this.selected)),\n            }}\n            onClick={this.handleEmittingEvent}\n            ref={(el) => (this.containerEl = el)}\n            role={role}\n            tabIndex={disableInteraction ? -1 : 0}\n          >\n            {this.selectionMode !== \"none\" && this.renderSelectionIcon()}\n            {this.renderChipImage()}\n            {this.icon && this.renderIcon()}\n            <span class={CSS.title}>\n              <slot onSlotchange={this.handleDefaultSlotChange} />\n            </span>\n            {this.closable && this.renderCloseButton()}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-chip-background-color: Specifies the component's background color.\n * @prop --calcite-chip-border-color: Specifies the component's border color.\n * @prop --calcite-chip-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-chip-text-color: Specifies the component's text color.\n * @prop --calcite-chip-icon-color: Specifies the component's icon color.\n * @prop --calcite-chip-close-icon-color: Specifies the component's close element icon color.\n * @prop --calcite-chip-select-icon-color: Specifies the component's selection element icon color.\n * @prop --calcite-chip-select-icon-color-pressed: Specifies the component's selection element icon color when active.\n *\n */\n\n:host {\n  @apply inline-flex\n    cursor-default;\n  border-radius: var(--calcite-chip-corner-radius, 9999px);\n}\n\n/* Host Prop Variant styles */\n:host([closed]) {\n  display: none;\n}\n\n:host([appearance=\"outline\"]),\n:host([appearance=\"outline-fill\"]) {\n  .container {\n    --calcite-internal-chip-close-icon-color: var(--calcite-color-text-3);\n    color: var(--calcite-chip-text-color, var(--calcite-color-text-1));\n  }\n\n  &:host([kind=\"brand\"]) .container {\n    border-color: var(--calcite-chip-border-color, var(--calcite-color-brand));\n  }\n\n  &:host([kind=\"inverse\"]) .container {\n    border-color: var(--calcite-chip-border-color, var(--calcite-color-border-inverse));\n  }\n\n  &:host([kind=\"neutral\"]) .container {\n    border-color: var(--calcite-chip-border-color, var(--calcite-color-border-1));\n  }\n}\n:host([appearance=\"outline\"]) .container {\n  @apply bg-transparent;\n}\n:host([appearance=\"outline-fill\"]) .container {\n  background-color: var(--calcite-chip-background-color, var(--calcite-color-foreground-1));\n}\n:host([appearance=\"solid\"]) {\n  .container {\n    border-color: transparent;\n  }\n\n  &:host([kind=\"brand\"]),\n  &:host([kind=\"inverse\"]) {\n    .container {\n      color: var(--calcite-chip-text-color, var(--calcite-color-text-inverse));\n    }\n\n    .close {\n      outline-color: var(--calcite-color-text-inverse);\n    }\n  }\n\n  &:host([kind=\"brand\"]) {\n    .container {\n      background-color: var(--calcite-chip-background-color, var(--calcite-color-brand));\n    }\n  }\n\n  &:host([kind=\"inverse\"]) {\n    .container {\n      background-color: var(--calcite-chip-background-color, var(--calcite-color-inverse));\n    }\n  }\n\n  &:host([kind=\"neutral\"]) .container {\n    background-color: var(--calcite-chip-background-color, var(--calcite-color-foreground-2));\n  }\n}\n:host([kind=\"neutral\"]) .container {\n  --calcite-internal-chip-close-icon-color: var(--calcite-color-text-3);\n\n  color: var(--calcite-chip-text-color, var(--calcite-color-text-1));\n}\n\n:host([selected]) .select-icon {\n  opacity: 1;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    --calcite-internal-chip-block-size: 1.5rem /* 24px */;\n    --calcite-internal-chip-container-space-x-end: 0.25rem /* 4px */;\n    --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n    --calcite-internal-chip-font-size: var(--calcite-font-size--2);\n    --calcite-internal-chip-icon-size: 1rem /* 16px */;\n    --calcite-internal-chip-icon-space: 0.25rem /* 4px */;\n    --calcite-internal-chip-image-size: 1.25rem /* 20px */;\n    --calcite-internal-chip-title-space: 0.25rem /* 4px */;\n    --calcite-internal-close-size: 1rem /* 16px */;\n\n    &:not(.closable) {\n      &.is-circle {\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n        --calcite-internal-chip-container-space-x-end: var(--calcite-spacing-px);\n      }\n    }\n\n    &.image--slotted {\n      &:has(.chip-icon),\n      &.text--slotted,\n      &.closable {\n        --calcite-internal-chip-image-space-x-end: 0.25rem /* 4px */;\n      }\n      &:not(.text--slotted, :has(.chip-icon)),\n      &:not(.selectable) {\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n      }\n    }\n\n    &.selectable.single:not(.is-circle) {\n      &.image--slotted {\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n      }\n      &.selected {\n        --calcite-internal-chip-select-space-x-end: 0.375rem /* 6px */;\n        --calcite-internal-chip-select-space-x-start: 0;\n\n        &.image--slotted {\n          --calcite-internal-chip-select-space-x-end: 0.5rem /* 8px */;\n          --calcite-internal-chip-select-space-x-start: 0.125rem /* 2px */;\n        }\n      }\n    }\n\n    &.multiple:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n      --calcite-internal-chip-select-space-x-start: 0.25rem /* 4px */;\n\n      &.image--slotted {\n        --calcite-internal-chip-select-space-x-end: 0.5rem /* 8px */;\n        --calcite-internal-chip-select-space-x-start: 0.375rem /* 6px */;\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n\n        &:not(.text--slotted) {\n          --calcite-internal-chip-select-space-x-start: 0.375rem /* 6px */;\n        }\n      }\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  .container {\n    --calcite-internal-chip-block-size: 2rem /* 32px */;\n    --calcite-internal-chip-container-space-x-end: 0.375rem /* 6px */;\n    --calcite-internal-chip-container-space-x-start: 0.375rem /* 6px */;\n    --calcite-internal-chip-font-size: var(--calcite-font-size--1);\n    --calcite-internal-chip-icon-size: 1.5rem /* 24px */;\n    --calcite-internal-chip-icon-space: 0.375rem /* 6px */;\n    --calcite-internal-chip-image-size: 1.5rem /* 24px */;\n    --calcite-internal-chip-title-space: 0.375rem /* 6px */;\n    --calcite-internal-close-size: 1.5rem /* 24px */;\n\n    &:not(.closable) {\n      &.is-circle {\n        --calcite-internal-chip-container-space-x-end: var(--calcite-spacing-px);\n        --calcite-internal-chip-container-space-x-start: var(--calcite-spacing-px);\n      }\n    }\n\n    &.image--slotted {\n      &:not(.is-circle) {\n        --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      }\n\n      &:has(.chip-icon),\n      &.text--slotted,\n      &.closable {\n        --calcite-internal-chip-image-space-x-end: 0.375rem /* 6px */;\n      }\n    }\n\n    &.selectable.single:not(.is-circle) {\n      &.image--slotted {\n        --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      }\n      &.selected {\n        --calcite-internal-chip-select-space-x-end: var(--calcite-spacing-px);\n        --calcite-internal-chip-select-space-x-start: 0;\n\n        &.image--slotted {\n          --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n          --calcite-internal-chip-select-space-x-start: 0.375rem /* 6px */;\n        }\n      }\n    }\n\n    &.multiple:not(.is-circle) {\n      --calcite-internal-chip-select-space-x-end: 0.125rem /* 2px */;\n      --calcite-internal-chip-select-space-x-start: 0.125rem /* 2px */;\n\n      &.image--slotted {\n        --calcite-internal-chip-select-space-x-end: 0.5rem /* 8px */;\n        --calcite-internal-chip-select-space-x-start: 0.25rem /* 4px */;\n      }\n    }\n\n    &.closable:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-end: 0.25rem /* 4px */;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .container {\n    --calcite-internal-chip-block-size: 2.75rem /* 44px */;\n    --calcite-internal-chip-container-space-x-end: 0.5rem /* 8px */;\n    --calcite-internal-chip-container-space-x-start: 0.5rem /* 8px */;\n    --calcite-internal-chip-font-size: var(--calcite-font-size-0);\n    --calcite-internal-chip-icon-size: 2rem /* 32px */;\n    --calcite-internal-chip-icon-space: 0.5rem /* 8px */;\n    --calcite-internal-chip-image-size: 2rem /* 32px */;\n    --calcite-internal-chip-title-space: 0.5rem /* 8px */;\n    --calcite-internal-close-size: 2rem /* 32px */;\n\n    &:not(.closable) {\n      &.is-circle {\n        --calcite-internal-chip-container-space-x-end: 0.25rem /* 4px */;\n        --calcite-internal-chip-container-space-x-start: 0.25rem /* 4px */;\n      }\n    }\n\n    &.image--slotted {\n      &:not(.is-circle) {\n        --calcite-internal-chip-container-space-x-start: 0.375rem /* 6px */;\n      }\n\n      &:has(.chip-icon),\n      &.text--slotted,\n      &.closable {\n        --calcite-internal-chip-image-space-x-end: 0.5rem /* 8px */;\n      }\n    }\n\n    &.selectable.single:not(.is-circle) {\n      &.image--slotted {\n        --calcite-internal-chip-container-space-x-start: 0.375rem /* 6px */;\n      }\n      &.selected {\n        --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n        --calcite-internal-chip-select-space-x-start: 0;\n\n        &.image--slotted {\n          --calcite-internal-chip-select-space-x-end: 0.375rem /* 6px */;\n          --calcite-internal-chip-select-space-x-start: 0.5rem /* 8px */;\n        }\n      }\n    }\n\n    &.multiple:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-start: 0.5rem /* 8px */;\n\n      --calcite-internal-chip-select-space-x-end: 0.25rem /* 4px */;\n      --calcite-internal-chip-select-space-x-start: 0.25rem /* 4px */;\n\n      &.image--slotted {\n        --calcite-internal-chip-select-space-x-end: 0.75rem /* 12px */;\n      }\n    }\n\n    &.closable:not(.is-circle) {\n      --calcite-internal-chip-container-space-x-end: 0.375rem /* 6px */;\n    }\n  }\n}\n\n// Sub-element styles\n.container {\n  @apply inline-flex\n  h-full\n  max-w-full\n  items-center\n  focus-base\n  justify-center\n  box-border\n  font-medium;\n\n  border-radius: var(--calcite-chip-corner-radius, 9999px);\n  border-width: var(--calcite-border-width-sm);\n  border-style: solid;\n  font-size: var(--calcite-internal-chip-font-size, var(--calcite-font-size));\n  padding-inline-start: var(--calcite-internal-chip-container-space-x-start);\n  padding-inline-end: var(--calcite-internal-chip-container-space-x-end);\n  block-size: var(--calcite-internal-chip-block-size, auto);\n  inline-size: var(--calcite-internal-chip-inline-size, auto);\n  min-inline-size: var(--calcite-internal-chip-block-size, auto);\n\n  &:hover .select-icon--active {\n    opacity: 1;\n  }\n\n  &.selectable {\n    @apply cursor-pointer;\n  }\n  &:not(.non-interactive):focus {\n    @apply focus-outset;\n  }\n\n  &.text--slotted .title {\n    @apply truncate;\n  }\n\n  &:not(.text--slotted) .title,\n  &:not(.image--slotted) .image-container {\n    display: none;\n  }\n\n  &.is-circle {\n    .chip-icon,\n    .image-container {\n      padding: 0;\n    }\n  }\n}\n\n.title {\n  padding-inline: var(--calcite-internal-chip-title-space);\n}\n\n.image-container {\n  @apply inline-flex overflow-hidden;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  block-size: var(--calcite-internal-chip-image-size, 1.5rem /* 24px */);\n  inline-size: var(--calcite-internal-chip-image-size, 1.5rem /* 24px */);\n  padding-inline-start: 0;\n  padding-inline-end: var(--calcite-internal-chip-image-space-x-end, 0);\n}\n\n.chip-icon {\n  @apply relative my-0 inline-flex duration-150 ease-in-out;\n  color: var(--calcite-chip-icon-color, var(--calcite-chip-text-color, var(--calcite-icon-color, currentColor)));\n  padding-inline: var(--calcite-internal-chip-icon-space, 0.375rem /* 6px */);\n}\n\n.select-icon {\n  align-self: center;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  inset-block-start: -1px;\n  position: absolute;\n  visibility: hidden;\n  inline-size: auto;\n  opacity: 0;\n  transition:\n    opacity 0.15s ease-in-out,\n    inline-size 0.15s ease-in-out;\n  color: var(--calcite-chip-select-icon-color, currentColor);\n\n  &.select-icon--active {\n    position: relative;\n    visibility: visible;\n    opacity: 0.5;\n    color: var(--calcite-chip-select-icon-color-pressed, var(--calcite-chip-select-icon-color, currentColor));\n  }\n}\n\n.multiple .select-icon {\n  @apply flex justify-center items-center;\n}\n\n.multiple .select-icon,\n.single .select-icon--active {\n  padding-inline-start: var(--calcite-internal-chip-select-space-x-start);\n  padding-inline-end: var(--calcite-internal-chip-select-space-x-end);\n  block-size: var(--calcite-internal-chip-icon-size, 1.5rem /* 24px */);\n  inline-size: var(--calcite-internal-chip-icon-size, 1.5rem /* 24px */);\n}\n\nslot[name=\"image\"]::slotted(*) {\n  @apply rounded-half flex h-full w-full overflow-hidden;\n}\n\n@include close-button(\n  var(--calcite-internal-close-size, 1.5rem),\n  0,\n  var(\n    --calcite-chip-close-icon-color,\n    var(--calcite-close-icon-color, var(--calcite-internal-chip-close-icon-color, var(--calcite-color-text-1)))\n  )\n);\n@include disabled();\n@include base-component();\n"],"names":["CSS","SLOTS","ICONS","Chip","proxyCustomElement","HTMLElement","handleDefaultSlotChange","this","updateHasText","close","calciteChipClose","emit","selected","closed","closeButtonKeyDownHandler","event","isActivationKey","key","preventDefault","handleSlotImageChange","hasImage","slotChangeHasAssignedElement","handleEmittingEvent","interactive","calciteChipSelect","watchSelected","selectionMode","handleSelectionPropertyChange","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectLocalized","connectMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectLocalized","disconnectMessages","componentWillLoad","setUpLoadableComponent","isBrowser","setUpMessages","keyDownHandler","target","el","calciteInternalChipKeyEvent","clickHandler","closable","closeButtonEl","focus","setFocus","componentFocusable","disabled","containerEl","hasText","textContent","trim","length","calciteInternalSyncSelectedChips","parentChipGroup","selectedItems","includes","calciteInternalChipSelect","renderChipImage","h","class","name","onSlotchange","renderSelectionIcon","icon","undefined","scale","getIconScale","renderCloseButton","messages","dismissLabel","onClick","onKeyDown","ref","tabIndex","renderIcon","flipRtl","iconFlipRtl","render","disableInteraction","role","Host","InteractiveContainer","toAriaBoolean","label"],"sourceRoot":""}