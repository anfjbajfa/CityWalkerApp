{"version":3,"file":"static/js/4388.c19e5ccf.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/block/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/block/block.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/block/block.scss?tag=calcite-block&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n  header: \"header\",\n};\n\nexport const CSS = {\n  actionsEnd: \"actions-end\",\n  button: \"button\",\n  container: \"container\",\n  content: \"content\",\n  contentStart: \"content-start\",\n  controlContainer: \"control-container\",\n  description: \"description\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerHasText: \"header--has-text\",\n  heading: \"heading\",\n  icon: \"icon\",\n  iconStart: \"icon--start\",\n  iconEnd: \"icon--end\",\n  iconEndContainer: \"icon-end-container\",\n  invalid: \"invalid\",\n  statusIcon: \"status-icon\",\n  summary: \"summary\",\n  title: \"title\",\n  toggle: \"toggle\",\n  toggleIcon: \"toggle-icon\",\n  valid: \"valid\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  contentStart: \"content-start\",\n  control: \"control\",\n  headerMenuActions: \"header-menu-actions\",\n  icon: \"icon\",\n};\n\nexport const ICONS = {\n  opened: \"chevron-up\",\n  closed: \"chevron-down\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  getSlotted,\n  toAriaBoolean,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Status, Position } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport {\n  defaultEndMenuPlacement,\n  FlipPlacement,\n  LogicalPlacement,\n  OverlayPositioning,\n} from \"../../utils/floating-ui\";\nimport { FlipContext } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\nimport { BlockMessages } from \"./assets/block/t9n\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component. It is recommended to use two or fewer actions.\n * @slot icon - [Deprecated] A slot for adding a leading header icon with `calcite-icon`. Use `icon-start` instead.\n * @slot content-start - A slot for adding non-actionable elements before content of the component.\n * @slot control - [Deprecated] A slot for adding a single HTML input element in a header. Use `actions-end` instead.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a dropdown menu.\n */\n@Component({\n  tag: \"calcite-block\",\n  styleUrl: \"block.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Block\n  implements\n    ConditionalSlotComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    T9nComponent,\n    LoadableComponent,\n    OpenCloseComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, displays a drag handle in the header.\n   */\n  @Prop({ reflect: true }) dragHandle = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the component's fallback menu `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() menuFlipPlacements: FlipPlacement[];\n\n  /**\n   * Determines where the action menu will be positioned.\n   */\n  @Prop({ reflect: true }) menuPlacement: LogicalPlacement = defaultEndMenuPlacement;\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n  }\n\n  /**\n   * Displays a status-related indicator icon.\n   *\n   * @deprecated Use `icon-start` instead.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop() description: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  onBeforeOpen(): void {\n    this.calciteBlockBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteBlockOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteBlockBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteBlockClose.emit();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockElement;\n\n  @State() defaultMessages: BlockMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContentStart = false;\n\n  @State() hasEndActions = false;\n\n  openTransitionProp = \"margin-top\";\n\n  transitionEl: HTMLElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.transitionEl = this.el;\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockClose: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockOpen: EventEmitter<void>;\n\n  /**\n   * Fires when the component's header is clicked.\n   *\n   * @deprecated Use `openClose` events such as `calciteBlockOpen`, `calciteBlockClose`, `calciteBlockBeforeOpen`, and `calciteBlockBeforeClose` instead.\n   */\n  @Event({ cancelable: false }) calciteBlockToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onHeaderClick = (): void => {\n    this.open = !this.open;\n    this.calciteBlockToggle.emit();\n  };\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderScrim(): VNode[] {\n    const { loading } = this;\n    const defaultSlot = <slot />;\n\n    return [loading ? <calcite-scrim loading={loading} /> : null, defaultSlot];\n  }\n\n  private renderLoaderStatusIcon(): VNode[] {\n    const { loading, messages, status } = this;\n\n    const hasSlottedIcon = !!getSlotted(this.el, SLOTS.icon);\n\n    return loading ? (\n      <div class={CSS.icon} key=\"loader\">\n        <calcite-loader inline label={messages.loading} />\n      </div>\n    ) : status ? (\n      <div class={CSS.icon} key=\"status-icon\">\n        <calcite-icon\n          class={{\n            [CSS.statusIcon]: true,\n            [CSS.valid]: status == \"valid\",\n            [CSS.invalid]: status == \"invalid\",\n          }}\n          icon={ICONS[status]}\n          scale=\"s\"\n        />\n      </div>\n    ) : hasSlottedIcon ? (\n      <div class={CSS.icon} key=\"icon-slot\">\n        <slot key=\"icon-slot\" name={SLOTS.icon} />\n      </div>\n    ) : null;\n  }\n\n  private renderActionsEnd(): VNode {\n    return (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.actionsEndSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  private renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderTitle(): VNode {\n    const { heading, headingLevel, description } = this;\n    return heading || description ? (\n      <div class={CSS.title}>\n        <Heading class={CSS.heading} level={headingLevel}>\n          {heading}\n        </Heading>\n        {description ? <div class={CSS.description}>{description}</div> : null}\n      </div>\n    ) : null;\n  }\n\n  private renderIcon(position: Extract<\"start\" | \"end\", Position>): VNode {\n    const { iconFlipRtl } = this;\n\n    const flipRtl =\n      iconFlipRtl === \"both\" || position === \"start\"\n        ? iconFlipRtl === \"start\"\n        : iconFlipRtl === \"end\";\n\n    const iconValue = position === \"start\" ? this.iconStart : this.iconEnd;\n    const iconClass = position === \"start\" ? CSS.iconStart : CSS.iconEnd;\n\n    if (!iconValue) {\n      return undefined;\n    }\n\n    /** Icon scale is not variable as the component does not have a scale property */\n    return (\n      <calcite-icon\n        class={iconClass}\n        flipRtl={flipRtl}\n        icon={iconValue}\n        key={iconValue}\n        scale=\"s\"\n      />\n    );\n  }\n\n  render(): VNode {\n    const {\n      collapsible,\n      el,\n      loading,\n      open,\n      heading,\n      messages,\n      description,\n      menuFlipPlacements,\n      menuPlacement,\n    } = this;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerContent = (\n      <header\n        class={{ [CSS.header]: true, [CSS.headerHasText]: !!(heading || description) }}\n        id={IDS.header}\n      >\n        {this.renderIcon(\"start\")}\n        {this.renderContentStart()}\n        {this.renderLoaderStatusIcon()}\n        {this.renderTitle()}\n      </header>\n    );\n\n    const hasControl = !!getSlotted(el, SLOTS.control);\n    const hasMenuActions = !!getSlotted(el, SLOTS.headerMenuActions);\n    const collapseIcon = open ? ICONS.opened : ICONS.closed;\n\n    const headerNode = (\n      <div class={CSS.headerContainer}>\n        {this.dragHandle ? <calcite-handle label={heading} /> : null}\n        {collapsible ? (\n          <button\n            aria-controls={IDS.content}\n            aria-describedby={IDS.header}\n            aria-expanded={collapsible ? toAriaBoolean(open) : null}\n            class={CSS.toggle}\n            id={IDS.toggle}\n            onClick={this.onHeaderClick}\n            title={toggleLabel}\n          >\n            {headerContent}\n            <div class={CSS.iconEndContainer}>\n              {this.renderIcon(\"end\")}\n              <calcite-icon class={CSS.toggleIcon} icon={collapseIcon} scale=\"s\" />\n            </div>\n          </button>\n        ) : this.iconEnd ? (\n          <div>\n            {headerContent}\n            <div class={CSS.iconEndContainer}>{this.renderIcon(\"end\")}</div>\n          </div>\n        ) : (\n          headerContent\n        )}\n        {hasControl ? (\n          <div aria-labelledby={IDS.header} class={CSS.controlContainer}>\n            <slot name={SLOTS.control} />\n          </div>\n        ) : null}\n        {hasMenuActions ? (\n          <calcite-action-menu\n            flipPlacements={menuFlipPlacements ?? [\"top\", \"bottom\"]}\n            label={messages.options}\n            overlayPositioning={this.overlayPositioning}\n            placement={menuPlacement}\n          >\n            <slot name={SLOTS.headerMenuActions} />\n          </calcite-action-menu>\n        ) : null}\n        {this.renderActionsEnd()}\n      </div>\n    );\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <article\n            aria-busy={toAriaBoolean(loading)}\n            class={{\n              [CSS.container]: true,\n            }}\n          >\n            {headerNode}\n            <section\n              aria-labelledby={IDS.toggle}\n              class={CSS.content}\n              hidden={!open}\n              id={IDS.content}\n            >\n              {this.renderScrim()}\n            </section>\n          </article>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-block-padding: Specifies the padding of the block `default` slot.\n */\n\n:host {\n  @extend %component-host;\n  @extend %component-spacing;\n  @apply transition-margin ease-cubic border-color-3 flex flex-shrink-0 flex-grow-0\n    flex-col border-0 border-b border-solid p-0;\n  flex-basis: auto;\n  transition-duration: var(--calcite-animation-timing);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/animation\";\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply justify-start;\n}\n\n.header--has-text {\n  padding: var(--calcite-spacing-md);\n}\n\n.header,\n.toggle {\n  grid-area: header;\n}\n\n.header-container {\n  @apply grid items-stretch;\n  grid-template: auto / auto 1fr auto auto;\n  grid-template-areas: \"handle header control menu actions-end\";\n  grid-column: header-start / actions-end;\n  grid-row: 1 / 2;\n}\n\n.content-start,\n.icon,\n.icon--start,\n.icon--end {\n  margin-inline-end: var(--calcite-spacing-md);\n}\n\n.icon {\n  & calcite-loader {\n    margin-inline-end: var(--calcite-spacing-xxxs);\n  }\n}\n\n.icon--start,\n.icon--end {\n  @apply text-color-3;\n}\n\n.actions-end {\n  grid-area: actions-end;\n}\n\n.toggle {\n  @apply font-sans\n    focus-base\n    m-0\n    flex\n    cursor-pointer\n    flex-nowrap\n    items-center\n    justify-between\n    border-none\n    p-0;\n\n  text-align: initial;\n  background-color: transparent;\n\n  &:hover {\n    @apply bg-foreground-2;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\ncalcite-loader[inline] {\n  grid-area: control;\n  @apply self-center;\n}\n\ncalcite-handle {\n  grid-area: handle;\n}\n\n.title {\n  @apply m-0;\n}\n\n.header .title .heading {\n  @apply text-n1\n    text-color-2\n    word-break\n    transition-color\n    p-0\n    font-medium\n    leading-tight\n    duration-150\n    ease-in-out;\n}\n\n.description {\n  @apply text-n2-wrap\n    text-color-3\n    word-break\n    mt-0.5\n    p-0;\n}\n\n.icon {\n  @apply flex;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.icon-end-container {\n  @apply flex items-center;\n\n  margin-inline-start: auto;\n}\n\n.toggle-icon {\n  @apply text-color-3\n  transition-color\n  self-center\n  justify-self-end\n  duration-150\n  ease-in-out;\n\n  margin-inline-end: var(--calcite-spacing-md);\n}\n\n.toggle:hover .toggle-icon {\n  @apply text-color-1;\n}\n\n.container {\n  @apply flex flex-col h-full relative;\n}\n\n.content {\n  @apply animate-in flex-1 relative min-h-0;\n  padding-block: var(--calcite-block-padding, var(--calcite-spacing-sm));\n  padding-inline: var(--calcite-block-padding, var(--calcite-spacing-md));\n}\n\n.content-start {\n  @apply text-color-3 flex items-center;\n}\n\n.control-container {\n  @apply m-0 flex;\n  grid-area: control;\n}\n\ncalcite-action-menu {\n  grid-area: menu;\n}\n\n.actions-end {\n  @apply flex items-stretch;\n}\n\n:host([open]) {\n  @apply my-2;\n\n  .header .title .heading {\n    @apply text-color-1;\n  }\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n} as const;\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <span\n          // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n          aria-checked={this.disabled ? null : toAriaBoolean(this.selected)}\n          aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n          aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n          class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          ref={(el): void => {\n            this.handleButton = el;\n          }}\n          // role of radio is being applied to allow space key to select in screen readers\n          role=\"radio\"\n          tabIndex={this.disabled ? null : 0}\n          title={this.getTooltip()}\n        >\n          <calcite-icon icon={ICONS.drag} scale=\"s\" />\n        </span>\n      </InteractiveContainer>\n    );\n  }\n}\n","/**\n* CSS Custom Properties  \n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-handle-background-color: Specifies the component's background color.\n* @prop --calcite-handle-background-color-hover: Specifies the component's background color on hover.\n* @prop --calcite-handle-background-color-selected: Specifies the component's background color when selected.\n* @prop --calcite-handle-icon-color: Specifies the component's icon color.\n* @prop --calcite-handle-icon-color-hover: Specifies the component's icon color on hover.\n* @prop --calcite-handle-icon-color-selected: Specifies the component's icon color when selected.\n*/\n\n:host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none;\n\n  color: var(--calcite-handle-icon-color, var(--calcite-color-border-input));\n  background-color: var(--calcite-handle-background-color, transparent);\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));\n    background-color: var(--calcite-handle-background-color-hover, var(--calcite-color-foreground-2));\n  }\n  &:focus {\n    @apply focus-inset;\n\n    color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));\n  }\n  &--selected {\n    color: var(--calcite-handle-icon-color-selected, var(--calcite-color-text-1));\n    background-color: var(--calcite-handle-background-color-selected, var(--calcite-color-foreground-3));\n  }\n}\n\n@include disabled();\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["IDS","CSS","SLOTS","ICONS","opened","closed","valid","invalid","Block","proxyCustomElement","HTMLElement","openTransitionProp","onHeaderClick","this","open","calciteBlockToggle","emit","actionsEndSlotChangeHandler","event","hasEndActions","slotChangeHasAssignedElement","handleContentStartSlotChange","hasContentStart","defaultEndMenuPlacement","openHandler","onToggleOpenCloseComponent","onMessagesChange","setFocus","componentFocusable","focusFirstTabbable","el","onBeforeOpen","calciteBlockBeforeOpen","onOpen","calciteBlockOpen","onBeforeClose","calciteBlockBeforeClose","onClose","calciteBlockClose","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectConditionalSlotComponent","connectLocalized","connectMessages","transitionEl","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","renderScrim","loading","defaultSlot","h","renderLoaderStatusIcon","messages","status","hasSlottedIcon","getSlotted","class","key","inline","label","icon","scale","name","renderActionsEnd","onSlotchange","renderContentStart","hidden","renderTitle","heading","headingLevel","description","Heading","level","renderIcon","position","iconFlipRtl","flipRtl","iconValue","iconStart","iconEnd","iconClass","render","collapsible","menuFlipPlacements","menuPlacement","toggleLabel","collapse","expand","headerContent","id","hasControl","hasMenuActions","collapseIcon","headerNode","dragHandle","toAriaBoolean","onClick","title","flipPlacements","options","overlayPositioning","placement","Host","InteractiveContainer","disabled","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","unobserve","mutations","forEach","_ref","target","forceUpdate","SUBSTITUTIONS","Handle","handleKeyDown","selected","calciteHandleChange","preventDefault","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","handleButton","focus","getTooltip","replace","dragHandleUntitled","type","setPosition","setSize","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","toString","onBlur","onKeyDown","ref","role","tabIndex","BREAKPOINTS","Scrim","resizeObserver","handleResize","handleDefaultSlotChange","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","disconnect","loaderScale","getScale","size","Math","min","clientHeight","clientWidth"],"sourceRoot":""}