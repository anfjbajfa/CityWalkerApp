"use strict";(self.webpackChunkcity_walk_app=self.webpackChunkcity_walk_app||[]).push([[7333,7995],{59051:(e,t,r)=>{r.r(t),r.d(t,{default:()=>Pr});var i=r(35143),s=r(16868),n=r(69098),o=r(50076),a=r(77717),l=r(50346),u=r(46053),p=(r(81806),r(76460)),c=(r(47249),r(85842)),m=r(17707),d=r(25515),y=r(35238),h=r(39356),g=r(71719),f=r(3825),w=r(53084),R=r(68134),v=r(90534),_=r(40565),b=r(28379),S=r(80963),x=r(95363),I=r(15359),M=r(42553),F=r(44038),A=r(52297);const D={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var P=r(93187),T=r(74916),j=r(73137);const O=new Set(["u1","u2","u4","u8","s8","u16","s16"]),N={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Z=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function C(e){return Z.has(e.type)}function V(e,t){if(!e||!t)return(0,w.o8)(e||t);const r=(0,w.o8)(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),J(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(G(r.functionArguments).Raster=t);return r}function J(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&J(e[r].arguments,t))}function E(e){const t=(0,w.o8)(D[e.functionName+"Function"]),r=e.functionArguments;for(const i in r)"raster"===i.toLowerCase()?(t.arguments[i]=E(r[i]),t.arguments[i].type="RasterFunctionTemplate"):"colormap"===i.toLowerCase()?(t.arguments[i].value=U(r[i]),t.arguments.ColorSchemeType.value=0):t.arguments[i].value=r[i];return t}function q(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=t.convertToRFT,i=new F.A;i.functionName="Stretch";const s=z[T.u.toJSON(e.stretchType)],n="u8",o=e.customStatistics?.map((e=>[e.min,e.max,e.avg??0,e.stddev??1])),a={StretchType:s,Statistics:o,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),s===z.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=n):s===z.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,i.outputPixelType=n):s===z.minMax?i.outputPixelType=n:s===z.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=a,i.variableName="Raster",e.colorRamp){const s=e.colorRamp,n=new F.A;if(r)n.functionArguments={ColorRamp:(0,P.hf)(s)};else{const r=(0,P.hs)(s,!0);if(r)n.functionArguments={colorRampName:r};else if(!t.convertColorRampToColormap||"algorithmic"!==s.type&&"multipart"!==s.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),n.functionArguments={colorRamp:t}}else n.functionArguments={Colormap:(0,P.R8)(s)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=i,r?new F.A({rasterFunctionDefinition:E(n)}):n}return r?new F.A({rasterFunctionDefinition:E(i)}):i}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],s=[],n=[],o=1e-4,{pixelType:a,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=L(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol?.color;let s;i?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach((o=>{null!=t.minValue&&null!=t.maxValue&&(s=o.attributes[e.field],(s>=t.minValue&&s<t.maxValue||r===e.classBreakInfos.length-1&&s>=t.minValue)&&n.push([o.attributes[p],i.r,i.g,i.b]))}))}));const r=a?$(n,a):n,i=new F.A;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=r,i.variableName="Raster",t.convertToRFT?new F.A({rasterFunctionDefinition:E(i)}):i}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;a?.a?(0===t?r.push(e.minValue,e.maxValue+o):r.push(e.minValue+o,e.maxValue+o),i.push(t),n.push([t,a.r,a.g,a.b])):s.push(e.minValue,e.maxValue)}));const c=a?$(n,a):n,m=new F.A;m.functionName="Remap",m.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:s},m.variableName="Raster";const d=new F.A;return d.functionName="Colormap",d.functionArguments={Colormap:c,Raster:m},t.convertToRFT?new F.A({rasterFunctionDefinition:E(d)}):d}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:s}=t,n=null==s?null:s.features,o=L(s),a=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(n){if(o){const t=new Map;l.forEach((e=>{const r=e.value,i=B(e);null!=r&&i?.a&&t.set(String(r),i.toRgb())}));const i=e.field;i&&n.forEach((e=>{let{attributes:s}=e;const n=String(s[i]),l=s[o],u=t.get(n);u?r.push([l,...u]):a&&r.push([l,...a])}))}}else for(let c=0;c<l.length;c++){const e=l[c],t=B(e),i=+e.value;if(t?.a){if(isNaN(i))return null;r.push([i,t.r,t.g,t.b])}}const u=i?$(r,i):r,p=new F.A;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new F.A({rasterFunctionDefinition:E(p)}):p}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:i}=t,s=i?$(r,i):r,n=new F.A;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=s,t.convertToRFT?new F.A({rasterFunctionDefinition:E(n)}):n}(e,t);case"vector-field":return function(e,t){const r=new F.A;r.functionName="VectorFieldRenderer";const{dataType:i,bandNames:s}=t,n="vector-uv"===i;let o,a;if(s&&2===s.length){const e=s.map((e=>e.toLowerCase()));o=e.indexOf("magnitude"),a=e.indexOf("direction")}-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new j.A,c={magnitudeBandID:o,directionBandID:a,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:N[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};r.functionArguments=c;const m=E(r);return t.convertToRFT?F.A.fromJSON({rasterFunctionDefinition:m}):r}(e,t);case"raster-shaded-relief":return function(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new F.A;const i=new F.A;i.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,o={HillshadeType:s,SlopeType:n,ZFactor:e.zFactor};return 0===s&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude),3===n&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor),i.functionArguments=o,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?o.ColorRamp=(0,P.hf)(e.colorRamp):o.Colormap=(0,P.R8)(e.colorRamp)),r?new F.A({rasterFunctionDefinition:E(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function G(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?G(t.functionArguments):e}const z={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function $(e,t){const r=O.has(t)?(0,A.hP)(t):null;return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function L(e){if(null==e)return;const{fields:t}=e,r=t?.find((e=>e?.name&&"value"===e.name.toLowerCase()));return r?.name}function B(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find((e=>"fill"===e.type))?.material?.color:e.symbol?.color}function U(e){const t=[],r=[];return e.forEach((e=>{t.push(e[0]),r.push((0,P.vL)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:r}}var H=r(29365),k=r(58646);let Q=class extends M.oY{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new H.A({where:r})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const r=e.pixelFilter,i=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const s=e.multidimensionalSubset?.areaOfInterest;return s&&(t=function(e,t){const r=new F.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return V(r,e)}(t,s)),i&&!r&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:r,renderer:i}=t;return e=e||t.rasterFunction,i&&C(i)?V(q(i,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map((e=>{let{name:t}=e;return t})),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let i=new F.A({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:r}});return i=e?.rasterFunctionDefinition?new F.A({rasterFunctionDefinition:E(i)}):i,V(i,e)}};(0,i._)([(0,u.MZ)()],Q.prototype,"layer",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"adjustAspectRatio",null),(0,i._)([(0,m.K)("adjustAspectRatio")],Q.prototype,"writeAdjustAspectRatio",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"bandIds",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"compression",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"compressionQuality",null),(0,i._)([(0,m.K)("compressionQuality")],Q.prototype,"writeCompressionQuality",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"compressionTolerance",null),(0,i._)([(0,m.K)("compressionTolerance")],Q.prototype,"writeCompressionTolerance",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"format",null),(0,i._)([(0,u.MZ)({type:String,json:{read:{reader:k.SZ.read},write:{writer:k.SZ.write}}})],Q.prototype,"interpolation",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"noData",null),(0,i._)([(0,u.MZ)({type:String,json:{read:{reader:k.hm.read},write:{writer:k.hm.write}}})],Q.prototype,"noDataInterpretation",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"pixelType",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"lercVersion",void 0),(0,i._)([(0,m.K)("lercVersion")],Q.prototype,"writeLercVersion",null),(0,i._)([(0,u.MZ)({type:Number})],Q.prototype,"version",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Q.prototype,"mosaicRule",null),(0,i._)([(0,u.MZ)({json:{write:!0,name:"renderingRule"}})],Q.prototype,"rasterFunction",null),Q=(0,i._)([(0,c.$)("esri.layers.support.ExportImageServiceParameters")],Q);var Y=r(44135),K=r(1900),W=r(16852),X=r(13023),ee=r(66486),te=r(23032),re=r(42915),ie=r(68347),se=r(37267),ne=r(99846),oe=r(78937),ae=r(20118),le=r(1438),ue=r(54994),pe=r(19247);let ce=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,i._)([(0,u.MZ)({type:pe.A,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],ce.prototype,"objectIds",void 0),(0,i._)([(0,u.MZ)({type:String,json:{write:!0}})],ce.prototype,"where",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],ce.prototype,"maxCount",void 0),ce=(0,i._)([(0,c.$)("esri.rest.support.FindImagesParameters")],ce);const me=ce,de=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,i._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"make",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"model",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"focalLength",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"pixelSize",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"rows",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],t.prototype,"cols",void 0),t=(0,i._)([(0,c.$)("esri.rest.support.CameraInfoMixin")],t),t};let ye=class extends(de(M.oY)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,i._)([(0,u.MZ)({json:{write:!0}})],ye.prototype,"id",void 0),(0,i._)([(0,u.MZ)({json:{name:"uri",write:!0}})],ye.prototype,"referenceUri",void 0),(0,i._)([(0,u.MZ)({type:Date,json:{write:!0}})],ye.prototype,"acquisitionDate",void 0),(0,i._)([(0,m.K)("acquisitionDate")],ye.prototype,"writeAcquisitionDate",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],ye.prototype,"cameraID",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],ye.prototype,"center",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],ye.prototype,"perspectiveCenter",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],ye.prototype,"orientation",void 0),ye=(0,i._)([(0,c.$)("esri.rest.support.ImageInspectionInfo")],ye);const he=ye;let ge=class extends M.oY{constructor(){super(...arguments),this.images=null}};(0,i._)([(0,u.MZ)({type:[he],json:{write:!0}})],ge.prototype,"images",void 0),ge=(0,i._)([(0,c.$)("esri.rest.support.FindImagesResult")],ge);const fe=ge;var we,Re=r(13312);let ve=we=class extends M.oY{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new we((0,w.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,i._)([(0,u.MZ)({type:[String],json:{name:"angleName",write:!0}})],ve.prototype,"angleNames",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],ve.prototype,"point",void 0),(0,i._)([(0,u.MZ)({type:Re.A,json:{write:!0}})],ve.prototype,"spatialReference",void 0),(0,i._)([(0,u.MZ)({type:_.jz,json:{write:!0}})],ve.prototype,"rasterId",void 0),ve=we=(0,i._)([(0,c.$)("esri.rest.support.ImageAngleParameters")],ve);const _e=ve;let be=class extends M.oY{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],be.prototype,"north",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],be.prototype,"up",void 0),(0,i._)([(0,u.MZ)({type:Re.A,json:{write:!0}})],be.prototype,"spatialReference",void 0),be=(0,i._)([(0,c.$)("esri.rest.support.ImageAngleResult")],be);const Se=be;var xe=r(31633),Ie=r(19902);const Me=new(r(45802).J)({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Fe=class extends M.oY{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var Ae;(0,i._)([(0,u.MZ)()],Fe.prototype,"type",void 0),(0,i._)([(0,u.MZ)({type:Me.apiValues,json:{read:Me.read,write:Me.write}})],Fe.prototype,"measureOperation",void 0),(0,i._)([(0,u.MZ)({type:H.A,json:{write:!0}})],Fe.prototype,"mosaicRule",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],Fe.prototype,"pixelSize",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],Fe.prototype,"raster",void 0),Fe=(0,i._)([(0,c.$)("esri.rest.support.BaseImageMeasureParameters")],Fe);let De=Ae=class extends Fe{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Ae((0,w.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,u.MZ)({types:y.yR,json:{name:"fromGeometry",read:!0,write:!0}})],De.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],De.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({type:Me.apiValues,json:{write:Me.write}})],De.prototype,"measureOperation",null),(0,i._)([(0,u.MZ)({json:{read:!0}})],De.prototype,"is3D",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],De.prototype,"linearUnit",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:xe.dk.read,write:xe.dk.write}})],De.prototype,"areaUnit",void 0),De=Ae=(0,i._)([(0,c.$)("esri.rest.support.ImageAreaParameters")],De);const Pe=De;let Te=class extends M.oY{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,i._)([(0,u.MZ)({type:Number,json:{read:!0,write:!0}})],Te.prototype,"value",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:!0,write:!0}})],Te.prototype,"displayValue",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{read:!0,write:!0}})],Te.prototype,"uncertainty",void 0),Te=(0,i._)([(0,c.$)("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],Te);let je=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,i._)([(0,u.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],je.prototype,"unit",void 0),je=(0,i._)([(0,c.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],je);let Oe=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,i._)([(0,u.MZ)({type:String,json:{read:xe.dk.read,write:xe.dk.write}})],Oe.prototype,"unit",void 0),Oe=(0,i._)([(0,c.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Oe);let Ne=class extends Te{constructor(){super(...arguments),this.unit=null}};(0,i._)([(0,u.MZ)({type:String,json:{read:xe.b$.read,write:xe.b$.write}})],Ne.prototype,"unit",void 0),Ne=(0,i._)([(0,c.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Ne);let Ze=class extends M.oY{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,i._)([(0,u.MZ)({type:String,json:{read:!0,write:!0}})],Ze.prototype,"name",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:!0,write:!0}})],Ze.prototype,"sensorName",void 0),Ze=(0,i._)([(0,c.$)("esri.rest.support.BaseImageMeasureResult")],Ze);let Ce=class extends Ze{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,i._)([(0,u.MZ)({type:Oe,json:{read:!0,write:!0}})],Ce.prototype,"area",void 0),(0,i._)([(0,u.MZ)({type:je,json:{read:!0,write:!0}})],Ce.prototype,"perimeter",void 0),Ce=(0,i._)([(0,c.$)("esri.rest.support.ImageAreaResult")],Ce);const Ve=Ce;let Je=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.outSpatialReference=null}};(0,i._)([(0,u.MZ)({type:Re.A,json:{name:"outSR",write:!0}})],Je.prototype,"outSpatialReference",void 0),Je=(0,i._)([(0,c.$)("esri.rest.support.ImageBoundaryParameters")],Je);const Ee=Je;var qe=r(76797),Ge=r(65215);let ze=class extends M.oY{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?Ge.A.fromJSON(e):qe.A.fromJSON(e)}};(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],ze.prototype,"area",void 0),(0,i._)([(0,u.MZ)({json:{name:"shape",write:!0}})],ze.prototype,"geometry",void 0),(0,i._)([(0,b.w)("geometry")],ze.prototype,"readGeometry",null),ze=(0,i._)([(0,c.$)("esri.rest.support.ImageBoundaryResult")],ze);const $e=ze;var Le;let Be=Le=class extends Fe{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Le((0,w.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,u.MZ)({type:pe.A,json:{read:!0,write:!0}})],Be.prototype,"fromGeometry",void 0),(0,i._)([(0,m.K)("fromGeometry")],Be.prototype,"writeFromGeometry",null),(0,i._)([(0,u.MZ)({type:pe.A,json:{read:!0,write:!0}})],Be.prototype,"toGeometry",void 0),(0,i._)([(0,u.MZ)({type:Me.apiValues,json:{write:Me.write}})],Be.prototype,"measureOperation",null),(0,i._)([(0,u.MZ)({json:{read:!0}})],Be.prototype,"is3D",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],Be.prototype,"linearUnit",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:xe.b$.read,write:xe.b$.write}})],Be.prototype,"angularUnit",void 0),Be=Le=(0,i._)([(0,c.$)("esri.rest.support.ImageDistanceParameters")],Be);const Ue=Be;let He=class extends Ze{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,i._)([(0,u.MZ)({type:je,json:{read:!0,write:!0}})],He.prototype,"distance",void 0),(0,i._)([(0,u.MZ)({type:Ne,json:{read:!0,write:!0}})],He.prototype,"azimuthAngle",void 0),(0,i._)([(0,u.MZ)({type:Ne,json:{read:!0,write:!0}})],He.prototype,"elevationAngle",void 0),He=(0,i._)([(0,c.$)("esri.rest.support.ImageDistanceResult")],He);const ke=He;var Qe=r(6409),Ye=r(38432),Ke=r(59187);let We=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=JSON.stringify(e.toJSON()))}};(0,i._)([(0,u.MZ)({types:y.yR,json:{read:Ie.rS,write:!0}})],We.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],We.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],We.prototype,"objectIds",void 0),(0,i._)([(0,Qe.e)(Ye.x,{ignoreUnknown:!1,name:"spatialRel"})],We.prototype,"spatialRelationship",void 0),(0,i._)([(0,u.MZ)({type:Ke.A,json:{name:"time",write:!0}})],We.prototype,"timeExtent",void 0),(0,i._)([(0,u.MZ)({type:String,json:{write:!0}})],We.prototype,"where",void 0),We=(0,i._)([(0,c.$)("esri.rest.support.ImageGPSInfoParameters")],We);const Xe=We;let et=class extends(de(M.oY)){constructor(){super(...arguments),this.id=null}};(0,i._)([(0,u.MZ)({json:{write:!0}})],et.prototype,"id",void 0),et=(0,i._)([(0,c.$)("esri.rest.support.CameraInfo")],et);const tt=et;let rt=class extends M.oY{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,i._)([(0,u.MZ)({json:{write:!0}})],rt.prototype,"id",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],rt.prototype,"name",void 0),(0,i._)([(0,u.MZ)({type:Date,json:{write:!0}})],rt.prototype,"acquisitionDate",void 0),(0,i._)([(0,m.K)("acquisitionDate")],rt.prototype,"writeAcquisitionDate",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],rt.prototype,"cameraID",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],rt.prototype,"center",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],rt.prototype,"gps",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],rt.prototype,"orientation",void 0),rt=(0,i._)([(0,c.$)("esri.rest.support.ImageGPSInfo")],rt);const it=rt;let st=class extends M.oY{constructor(){super(...arguments),this.images=null,this.cameras=null}};(0,i._)([(0,u.MZ)({type:[it],json:{write:!0}})],st.prototype,"images",void 0),(0,i._)([(0,u.MZ)({type:[tt],json:{write:!0}})],st.prototype,"cameras",void 0),st=(0,i._)([(0,c.$)("esri.rest.support.ImageGPSInfoResult")],st);const nt=st;var ot;let at=ot=class extends Fe{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new ot((0,w.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,u.MZ)({type:pe.A,json:{read:!0}})],at.prototype,"fromGeometry",void 0),(0,i._)([(0,m.K)("fromGeometry")],at.prototype,"writeFromGeometry",null),(0,i._)([(0,u.MZ)({type:pe.A,json:{read:!0,write:!0}})],at.prototype,"toGeometry",void 0),(0,i._)([(0,u.MZ)({type:Me.apiValues,json:{write:Me.write}})],at.prototype,"measureOperation",null),(0,i._)([(0,u.MZ)({json:{read:!0}})],at.prototype,"operationType",void 0),(0,i._)([(0,u.MZ)({type:String,json:{read:xe.Sk.read,write:xe.Sk.write}})],at.prototype,"linearUnit",void 0),at=ot=(0,i._)([(0,c.$)("esri.rest.support.ImageHeightParameters")],at);const lt=at;let ut=class extends Ze{constructor(){super(...arguments),this.height=null}};(0,i._)([(0,u.MZ)({type:je,json:{read:!0,write:!0}})],ut.prototype,"height",void 0),ut=(0,i._)([(0,c.$)("esri.rest.support.ImageHeightResult")],ut);const pt=ut;var ct,mt=r(46570);let dt=ct=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=H.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=F.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=null!=e.start?e.start.getTime():null,s=null!=e.end?e.end.getTime():null;t[r]=null!=i?null!=s?`${i},${s}`:`${i}`:null}}clone(){return new ct((0,w.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,i._)([(0,u.MZ)({json:{write:!0}})],dt.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],dt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({type:H.A,json:{write:!0}})],dt.prototype,"mosaicRule",null),(0,i._)([(0,m.K)("mosaicRule")],dt.prototype,"writeMosaicRule",null),(0,i._)([(0,u.MZ)({type:F.A,json:{write:!0,name:"renderingRule"}})],dt.prototype,"rasterFunction",null),(0,i._)([(0,m.K)("rasterFunction")],dt.prototype,"writeRasterFunction",null),(0,i._)([(0,u.MZ)({type:[F.A],json:{write:!0,name:"renderingRules"}})],dt.prototype,"rasterFunctions",void 0),(0,i._)([(0,m.K)("rasterFunctions")],dt.prototype,"writeRasterFunctions",null),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],dt.prototype,"pixelSize",void 0),(0,i._)([(0,m.K)("pixelSize")],dt.prototype,"writePixelSize",null),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],dt.prototype,"returnGeometry",void 0),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],dt.prototype,"returnCatalogItems",void 0),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],dt.prototype,"returnPixelValues",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],dt.prototype,"maxItemCount",void 0),(0,i._)([(0,u.MZ)({type:Ke.A,json:{write:{target:"time"}}})],dt.prototype,"timeExtent",void 0),(0,i._)([(0,m.K)("timeExtent")],dt.prototype,"writeTimeExtent",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],dt.prototype,"raster",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],dt.prototype,"viewId",void 0),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],dt.prototype,"processAsMultidimensional",void 0),dt=ct=(0,i._)([(0,c.$)("esri.rest.support.ImageIdentifyParameters")],dt);const yt=dt;var ht=r(77725);let gt=class extends M.oY{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,i._)([(0,u.MZ)({json:{write:!0}})],gt.prototype,"catalogItemVisibilities",void 0),(0,i._)([(0,u.MZ)({type:ht.A,json:{write:!0}})],gt.prototype,"catalogItems",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],gt.prototype,"location",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],gt.prototype,"name",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],gt.prototype,"objectId",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],gt.prototype,"processedValues",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],gt.prototype,"properties",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],gt.prototype,"value",void 0),gt=(0,i._)([(0,c.$)("esri.rest.support.ImageIdentifyResult")],gt);const ft=gt;var wt;let Rt=wt=class extends M.oY{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new wt({geometries:this.geometries?.map((e=>e.clone()))??[],rasterId:this.rasterId})}};(0,i._)([(0,u.MZ)({type:[pe.A],json:{write:!0}})],Rt.prototype,"geometries",void 0),(0,i._)([(0,m.K)("geometries")],Rt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({type:_.jz,json:{write:!0}})],Rt.prototype,"rasterId",void 0),Rt=wt=(0,i._)([(0,c.$)("esri.rest.support.ImagePixelLocationParameters")],Rt);const vt=Rt;let _t=class extends M.oY{constructor(){super(...arguments),this.geometries=null}};(0,i._)([(0,u.MZ)({json:{write:!0}})],_t.prototype,"geometries",void 0),_t=(0,i._)([(0,c.$)("esri.rest.support.ImagePixelLocationResult")],_t);const bt=_t;var St;let xt=St=class extends Fe{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new St((0,w.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,i._)([(0,u.MZ)({types:y.yR,json:{name:"fromGeometry",read:Ie.rS}})],xt.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],xt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({type:Me.apiValues,json:{read:Me.read,write:Me.write}})],xt.prototype,"measureOperation",null),(0,i._)([(0,u.MZ)({json:{read:!0}})],xt.prototype,"is3D",void 0),xt=St=(0,i._)([(0,c.$)("esri.rest.support.ImagePointParameters")],xt);const It=xt;let Mt=class extends Ze{constructor(){super(...arguments),this.point=null}};(0,i._)([(0,u.MZ)({type:pe.A,json:{name:"point.value",read:!0,write:!0}})],Mt.prototype,"point",void 0),Mt=(0,i._)([(0,c.$)("esri.rest.support.ImagePointResult")],Mt);const Ft=Mt;var At,Dt=r(66388);let Pt=At=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=e.toJSON())}set locations(e){if(e?.length){const t=new Dt.A({spatialReference:e[0].spatialReference,points:e.map((e=>{let{x:t,y:r}=e;return[t,r]}))});this._set("locations",e),this.geometry=t}}clone(){return new At((0,w.o8)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,i._)([(0,u.MZ)({types:y.yR,json:{read:Ie.rS}})],Pt.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],Pt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)()],Pt.prototype,"locations",null),(0,i._)([(0,u.MZ)({type:String,json:{type:k.SZ.jsonValues,read:k.SZ.read,write:k.SZ.write}})],Pt.prototype,"interpolation",void 0),(0,i._)([(0,u.MZ)({type:H.A,json:{write:!0}})],Pt.prototype,"mosaicRule",void 0),(0,i._)([(0,u.MZ)({type:[String],json:{write:!0}})],Pt.prototype,"outFields",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],Pt.prototype,"pixelSize",void 0),(0,i._)([(0,u.MZ)({type:String,json:{write:!0}})],Pt.prototype,"raster",void 0),(0,i._)([(0,u.MZ)({type:Boolean,json:{write:!0}})],Pt.prototype,"returnFirstValueOnly",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],Pt.prototype,"sampleDistance",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],Pt.prototype,"sampleCount",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],Pt.prototype,"sliceId",void 0),(0,i._)([(0,u.MZ)({type:Ke.A,json:{read:{source:"time"},write:{target:"time"}}})],Pt.prototype,"timeExtent",void 0),Pt=At=(0,i._)([(0,c.$)("esri.rest.support.ImageSampleParameters")],Pt);const Tt=Pt;let jt=class extends M.oY{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,i._)([(0,u.MZ)({json:{write:!0}})],jt.prototype,"attributes",void 0),(0,i._)([(0,u.MZ)({type:pe.A,json:{write:!0}})],jt.prototype,"location",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],jt.prototype,"locationId",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],jt.prototype,"rasterId",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],jt.prototype,"resolution",void 0),(0,i._)([(0,u.MZ)({json:{write:!0}})],jt.prototype,"pixelValue",void 0),jt=(0,i._)([(0,c.$)("esri.rest.support.ImageSample")],jt);const Ot=jt;let Nt=class extends M.oY{constructor(){super(...arguments),this.samples=null}};(0,i._)([(0,u.MZ)({type:[Ot],json:{write:!0}})],Nt.prototype,"samples",void 0),Nt=(0,i._)([(0,c.$)("esri.rest.support.ImageSampleResult")],Nt);const Zt=Nt;let Ct=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,r){t.geometries=e?.length?{geometryType:(0,Ie.$B)(e[0]),geometries:e.map((e=>({...e.toJSON(),spatialReference:void 0})))}:null}};(0,i._)([(0,u.MZ)({types:[y.yR]})],Ct.prototype,"geometries",void 0),(0,i._)([(0,m.K)("geometries")],Ct.prototype,"writeGeometries",null),(0,i._)([(0,u.MZ)({type:[_.jz],json:{write:!0}})],Ct.prototype,"rasterIds",void 0),(0,i._)([(0,u.MZ)({type:Re.A,json:{name:"outSR",write:!0}})],Ct.prototype,"outSpatialReference",void 0),Ct=(0,i._)([(0,c.$)("esri.rest.support.ImageToMapMultirayParameters")],Ct);const Vt=Ct;let Jt=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]={...e.toJSON(),spatialReference:void 0})}};(0,i._)([(0,u.MZ)({types:y.yR,json:{read:Ie.rS,write:!0}})],Jt.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],Jt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Jt.prototype,"rasterId",void 0),(0,i._)([(0,u.MZ)({type:Re.A,json:{name:"outSR",write:!0}})],Jt.prototype,"outSpatialReference",void 0),(0,i._)([(0,u.MZ)({json:{name:"options.DOff",write:!0}})],Jt.prototype,"depthOffset",void 0),(0,i._)([(0,u.MZ)({json:{name:"options.Adjust",write:!0}})],Jt.prototype,"adjust",void 0),Jt=(0,i._)([(0,c.$)("esri.rest.support.ImageToMapParameters")],Jt);const Et=Jt;let qt=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};(0,i._)([(0,u.MZ)({type:String,json:{name:"uri",write:!0}})],qt.prototype,"referenceUri",void 0),(0,i._)([(0,u.MZ)({type:Number,json:{write:!0}})],qt.prototype,"rasterId",void 0),qt=(0,i._)([(0,c.$)("esri.rest.support.ImageUrlParameters")],qt);const Gt=qt;let zt=class extends M.oY{constructor(){super(...arguments),this.url=null}};(0,i._)([(0,u.MZ)({json:{name:"imageURL",write:!0}})],zt.prototype,"url",void 0),zt=(0,i._)([(0,c.$)("esri.rest.support.ImageUrlResult")],zt);const $t=zt;let Lt=class extends((0,n.O)(M.oY)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]=JSON.stringify(e))}};(0,i._)([(0,u.MZ)({types:y.yR,json:{read:Ie.rS,write:!0}})],Lt.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],Lt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Lt.prototype,"rasterId",void 0),(0,i._)([(0,u.MZ)({json:{name:"options.VisibleOnly",write:!0}})],Lt.prototype,"visibleOnly",void 0),Lt=(0,i._)([(0,c.$)("esri.rest.support.MapToImageParameters")],Lt);const Bt=Lt;let Ut=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),pe.A.fromJSON(e)}};(0,i._)([(0,u.MZ)({types:y.yR,json:{name:"Shape",read:Ie.rS,write:!0}})],Ut.prototype,"geometry",void 0),(0,i._)([(0,u.MZ)({json:{name:"Length",write:!0}})],Ut.prototype,"length",void 0),(0,i._)([(0,u.MZ)({json:{name:"Area",write:!0}})],Ut.prototype,"area",void 0),(0,i._)([(0,u.MZ)({json:{name:"Center",write:!0}})],Ut.prototype,"center",void 0),(0,i._)([(0,b.w)("center")],Ut.prototype,"readCenter",null),Ut=(0,i._)([(0,c.$)("esri.rest.support.MeasureAreaFromImageResult")],Ut);const Ht=Ut;var kt;let Qt=kt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Ie.$B)(e),t[r]={...e.toJSON(),spatialReference:void 0})}clone(){const e=(0,w.o8)({geometry:this.geometry,rasterId:this.rasterId});return new kt(e)}};(0,i._)([(0,u.MZ)({types:y.yR,json:{name:"fromGeometry",read:Ie.rS,write:!0}})],Qt.prototype,"geometry",void 0),(0,i._)([(0,m.K)("geometry")],Qt.prototype,"writeGeometry",null),(0,i._)([(0,u.MZ)({json:{write:!0}})],Qt.prototype,"rasterId",void 0),Qt=kt=(0,i._)([(0,c.$)("esri.rest.support.MeasureFromImageParameters")],Qt);const Yt=Qt;let Kt=class extends M.oY{constructor(){super(...arguments),this.geometry=null,this.length=null}};(0,i._)([(0,u.MZ)({types:y.yR,json:{name:"Shape",read:Ie.rS,write:!0}})],Kt.prototype,"geometry",void 0),(0,i._)([(0,u.MZ)({json:{name:"Length",write:!0}})],Kt.prototype,"length",void 0),Kt=(0,i._)([(0,c.$)("esri.rest.support.MeasureLengthFromImageResult")],Kt);const Wt=Kt;function Xt(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null==t.end||r.includes(t.end)||r.push(t.end),e.time=r.join(",")}}async function er(e,t,r){t=(0,_.PZ)(mt.A,t);const i=(0,ue.Dl)(e),s=t.geometry?[t.geometry]:[],n=await(0,le.el)(s),o=t.toJSON();Xt(o);const a=n?.[0];null!=a&&(o.geometry=sr(a));const l=(0,ue.lF)({...i.query,f:"json",...o});return(0,ue.jV)(l,r)}async function tr(e,t,r){t=(0,_.PZ)(yt,t);const i=(0,ue.Dl)(e),s=t.geometry?[t.geometry]:[];return(0,le.el)(s).then((e=>{const s=t.toJSON(),n=e?.[0];null!=n&&(s.geometry=JSON.stringify(sr(n)));const o=(0,ue.lF)({...i.query,f:"json",...s}),a=(0,ue.jV)(o,r);return(0,f.A)(i.path+"/identify",a)})).then((e=>ft.fromJSON(e.data)))}async function rr(e,t,r,i){const s=(0,ue.Dl)(e),n=await(0,le.el)(r),o=t.toJSON();null!=n[0]&&(o.fromGeometry=JSON.stringify(sr(n[0]))),null!=n[1]&&(o.toGeometry=JSON.stringify(sr(n[1])));const a=(0,ue.lF)({...s.query,f:"json",...o}),l=(0,ue.jV)(a,i),{data:u}=await(0,f.A)(s.path+"/measure",l);return u}async function ir(e,t,r){t=(0,_.PZ)(Yt,t);const i=(0,ue.Dl)(e),s=t.toJSON(),n=(0,ue.lF)({...i.query,f:"json",...s}),o=(0,ue.jV)(n,r),{data:a}=await(0,f.A)(i.path+"/measureFromImage",o);return a}function sr(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=nr(e.spatialReference)),t}function nr(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function or(e,t){if(!e.imageCoordinateSystem)return(0,S.YX)(e);const r=nr(e),{icsid:i,icsns:s}=r;return null==i||null!=s&&!t?.toLowerCase().includes("/"+s.toLowerCase()+"/")?JSON.stringify(r):`0:${i}`}var ar=r(25213),lr=r(49653);var ur=r(37713),pr=r(53104),cr=r(14009),mr=r(68295),dr=r(46533);const yr=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),hr=(0,_.Qp)(_.GB,{min:0,max:255});const gr=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new Q({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?H.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new K.A(this.fields):null}set format(e){e&&yr.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=H.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?H.A.fromJSON(r):this._isMosaicRuleSupported(t)?H.A.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new H.A({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=hr(e))}readObjectIdField(e,t){if(!e){const r=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r?.name}return e}get parsedUrl(){return(0,v.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const r=t?.find((t=>{let{name:r}=t;return r===e}));return r?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer,s=(0,g.LF)(i,r);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!i.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),C(s)||p.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,t=new Y.A({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new Y.A({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new Y.A({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let s=this.fields?(0,w.o8)(this.fields):[];s.push(r),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&s.push(i),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{s.push(new Y.A({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(s.push(new Y.A({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),s.push(new Y.A({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:n}=this.rasterInfo??{};if(null!=n){const t=n.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=(0,w.o8)(t);return r.name=e+t.name,r}));s=s.concat(t)}return s}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=F.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r?.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?F.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?Re.A.fromJSON(r):null}readPixelType(e){return k.e8.fromJSON(e)||e}writePixelType(e,t,r){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[r]=k.e8.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;const{renderer:i,symbolizer:s,pixelFilter:n,bandIds:o}=this;if(!this._isPicture()&&i&&s&&!n){const n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(i.toJSON()),a=this._rasterJobHandler.instance;if(a){n&&(s.bind(),await a.updateSymbolizer(s,t),this._cachedRendererJson=i.toJSON());const l=await a.symbolize({bandIds:o,...e},t);r={extent:e.extent,pixelBlock:l}}else r={extent:e.extent,pixelBlock:s.symbolize({bandIds:o,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new o.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(_e,t)).toJSON();null!=i.angleName&&(i.angleName=i.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(i.point.spatialReference=nr(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(i.spatialReference=or(t.spatialReference));const s=(0,ue.Dl)(e),n=(0,ue.lF)({...s.query,f:"json",...i}),o=(0,ue.jV)(n,r),{data:a}=await(0,f.A)(`${s.path}/computeAngles`,o);return a.spatialReference=a.spatialReference?null!=a.spatialReference.geodataXform?new Re.A({wkid:0,imageCoordinateSystem:a.spatialReference}):Re.A.fromJSON(a.spatialReference):null,"NaN"===a.north&&(a.north=null),"NaN"===a.up&&(a.up=null),new Se(a)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new o.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(vt,t)).toJSON(),{geometries:s}=t;if(s)for(let u=0;u<s.length;u++)s[u].spatialReference?.imageCoordinateSystem&&(i.geometries.geometries[u].spatialReference=nr(s[u].spatialReference));const n=(0,ue.Dl)(e),o=(0,ue.lF)({...n.query,f:"json",...i}),a=(0,ue.jV)(o,r),{data:l}=await(0,f.A)(`${n.path}/computePixelLocation`,a);return bt.fromJSON(l)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new o.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){const i=await er(e,t,r),s=(0,ue.Dl)(e),{data:n}=await(0,f.A)(`${s.path}/computeHistograms`,i);return{histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new o.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){const i=await er(e,t,r),s=(0,ue.Dl)(e),{data:n}=await(0,f.A)(`${s.path}/computeStatisticsHistograms`,i),{statistics:o}=n;return o?.length&&o.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:o,histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const r=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?r.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?r.mensuration.supportsHeightFromBaseAndTopShadow:r.mensuration.supportsHeightFromTopAndTopShadow))throw new o.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){t=(0,_.PZ)(lt,t);const i=await rr(e,t,[t.fromGeometry,t.toGeometry],r);return pt.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsAreaAndPerimeter||e.is3D&&!r.mensuration.supports3D)throw new o.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){t=(0,_.PZ)(Pe,t);const i=await rr(e,t,[t.geometry],r);return Ve.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsDistanceAndAngle||e.is3D&&!r.mensuration.supports3D)throw new o.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){t=(0,_.PZ)(Ue,t);const i=await rr(e,t,[t.fromGeometry,t.toGeometry],r);return ke.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsPointOrCentroid||e.is3D&&!r.mensuration.supports3D)throw new o.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,w.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){t=(0,_.PZ)(It,t);const i=await rr(e,t,[t.geometry],r);return Ft.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new o.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new o.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function(e,t,r){const i=await ir(e,t,r);return Wt.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new o.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new o.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function(e,t,r){const i=await ir(e,t,r);return Ht.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}async fetchImage(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null==e||null==t||null==i)throw new o.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:s.signal});e&&(this.rasterInfo=e)}const n=this.getExportImageServiceParameters(e,t,i,s.timeExtent);if(null==n){if(s.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=i,s.returnImageBitmap?{imageBitmap:await(0,W.m)(e,`${r(this.parsedUrl)}/exportImage`,s.signal)}:{imageOrCanvasElement:e}}const{bandIds:n,rasterInfo:o}=this,a=(n?.length||o.bandCount)??0,l=t*i,u=o.pixelType,p=[];for(let e=0;e<a;e++)p.push(ee.A.createEmptyBand(u,l));return{pixelData:{pixelBlock:new ee.A({width:t,height:i,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const a=!!s.requestAsImageElement&&!this.pixelFilter,l=a&&!!s.returnImageBitmap,u={imageServiceParameters:n,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:a,returnImageBitmap:l,signal:s.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return(0,f.A)(r(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new o.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,f.A)(r(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>ht.A.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return async function(e,t,r){const i=(0,ue.Dl)(e),s=(0,ue.lF)({...i?.query,f:"json"}),n=(0,ue.jV)(s,r),o=`${i?.path}/${t}/info`,a=(0,f.A)(`${o}`,n),l=(0,f.A)(`${o}/keyProperties`,n),u=await Promise.allSettled([a,l]),p="fulfilled"===u[0].status?u[0].value.data:null,c="fulfilled"===u[1].status?u[1].value.data:null;let m=null;p.statistics?.length&&(m=p.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const d=qe.A.fromJSON(p.extent),y=Math.ceil(d.width/p.pixelSizeX-.1),h=Math.ceil(d.height/p.pixelSizeY-.1),g=d.spatialReference,w=new pe.A({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:g}),R=p.histograms?.length?p.histograms:null,v=new lr.A({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new te.A({width:y,height:h,bandCount:p.bandCount,extent:d,spatialReference:g,pixelSize:w,pixelType:p.pixelType.toLowerCase(),statistics:m,histograms:R,keyProperties:c,storageInfo:v})}(r(this.parsedUrl),e,i)}async getCatalogItemICSInfo(e,t){const{data:i}=await(0,f.A)(r(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),s=i?.ics;if(!s)return;let n=null;try{n=(await(0,f.A)(r(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n?.spatialReference)return{ics:s,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?(0,f.A)(r(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:(0,S.YX)(a),outSR:"0:"+e},u=(0,f.A)(r(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=(n.xmin+n.xmax)/2,c=(n.ymax-n.ymin)/6,m=n.ymin+c,d=[];for(let r=0;r<5;r++)d.push({x:p,y:m+c*r});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,S.YX)(a),outSR:"0:"+e},h=(0,f.A)(r(this.parsedUrl)+"/project",{query:this._getQueryParams(y),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([o,u,h]);let w=g[0].ipxf;if(null==w){const e=s.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(w={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=qe.A.fromJSON(g[1]?.geometries?.[0]);R&&(R.spatialReference=new Re.A({wkid:0,imageCoordinateSystem:s}));const v=g[2].geometries?g[2].geometries.filter((e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],_=v.length;if(_<3)return{ics:s,icsToPixelTransform:w,icsExtent:R,northDirection:null};let b=0,x=0,I=0,M=0;for(let r=0;r<_;r++)b+=v[r].x,x+=v[r].y,I+=v[r].x*v[r].x,M+=v[r].x*v[r].y;const F=(_*M-b*x)/(_*I-b*b);let A=0;const D=v[4].x>v[0].x,P=v[4].y>v[0].y;return F===1/0?A=P?90:270:0===F?A=D?0:180:F>0?A=D?180*Math.atan(F)/Math.PI:180*Math.atan(F)/Math.PI+180:F<0&&(A=P?180+180*Math.atan(F)/Math.PI:360+180*Math.atan(F)/Math.PI),{ics:s,icsToPixelTransform:w,icsExtent:R,northDirection:A}}async generateRasterInfo(e,t){e=(0,_.PZ)(F.A,e);const i={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??(0,ar.Tw)(r(this.parsedUrl),this.sourceJSON,i);const s=function(e){const t=JSON.stringify(e),r=t.includes('"rasterFunctionDefinition":{'),i=r?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),s=i?.map((e=>r?e.slice(8,-18):e.slice(18,-1)));return s?s.join("/"):null}(e);if(!s)throw new o.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[s])return this._functionRasterInfos[s];const n=(0,ar.X6)(r(this.parsedUrl),e,i);this._functionRasterInfos[s]=n;try{return await n}catch(ye){throw this._functionRasterInfos[s]=null,ye}}getExportImageServiceParameters(e,t,i,s){const n=or((e=e.clone().shiftCentralMeridian()).spatialReference,r(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:a,noData:l}=o;let{renderingRule:u}=o;const p=this.rasterFunction?.rasterFunctionDefinition,c=this.renderer?.type,m=!c||"raster-stretch"===c||"raster-colormap"===c||"unique-value"===c||"class-breaks"===c||"raster-shaded-relief"===c;if(a?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&m){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:a}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;o.bandIds=void 0}else o.bandIds=a?.join(",");Array.isArray(l)&&l.length>0&&(o.noData=l.join(","));const d=this._processMultidimensionalIntersection(null,s,this.exportImageServiceParameters.mosaicRule);if(d.isOutSide)return null;o.mosaicRule=null!=d.mosaicRule?JSON.stringify(d.mosaicRule):null,s=d.timeExtent,o.renderingRule=this._getRenderingRuleString(F.A.fromJSON(u));const y={};if(null!=s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?y.time=""+e:null==e&&null==t||(y.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+i,...o,...y}}async getSamples(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r?.operations.supportsGetSamples)throw new o.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,w.o8)(e);const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),async function(e,t,r){const i=(t=(0,_.PZ)(Tt,t)).toJSON();Xt(i),i.outFields?.length&&(i.outFields=i.outFields.join(","));const s=await(0,le.el)(t.geometry),n=s?.[0];null!=n&&(i.geometry=sr(n));const o=(0,ue.Dl)(e),a=(0,ue.lF)({...o.query,f:"json",...i}),l=(0,ue.jV)(a,r),{data:u}=await(0,f.A)(`${o.path}/getSamples`,l),p=u?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return Zt.fromJSON({samples:p})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new o.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,w.o8)(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=Ge.A.fromExtent(e.geometry));const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new o.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:i,rasterFunction:s}=this;return s&&null==e.rasterFunction&&(e.rasterFunction=s),i&&null==e.raster&&(e.raster=i),tr(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new o.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(Et,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(i.geometry=sr(t.geometry)),t.depthOffset&&t.adjust||delete i.options;const s=(0,ue.Dl)(e),n=(0,ue.lF)({...s.query,f:"json",...i}),o=(0,ue.jV)(n,r),{data:a}=await(0,f.A)(`${s.path}/imageToMap`,o);return(0,Ie.rS)(a)}(r(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new o.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(Vt,t)).toJSON();t.rasterIds?.length&&(i.rasterIds=t.rasterIds.join(","));const s=(0,ue.Dl)(e),n=(0,ue.lF)({...s.query,f:"json",...i}),o=(0,ue.jV)(n,r),{data:a}=await(0,f.A)(`${s.path}/imageToMapMultiray`,o);return(0,Ie.rS)(a)}(r(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new o.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(Bt,t)).toJSON(),s=await(0,le.el)(t.geometry),n=s?.[0];null!=n&&(i.geometry=sr(n)),t.visibleOnly||delete i.options;const o=n?.spatialReference??t.geometry?.spatialReference;o&&(i.inSR=or(o));const a=(0,ue.Dl)(e),l=(0,ue.lF)({...a.query,f:"json",...i}),u=(0,ue.jV)(l,r),{data:p}=await(0,f.A)(`${a.path}/mapToImage`,u);return(0,Ie.rS)(p)}(r(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new o.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(me,t)).toJSON(),s=await(0,le.el)([t.fromGeometry,t.toGeometry]);null!=s[0]&&(i.fromGeometry=sr(s[0]),s[0].spatialReference&&(i.inSR=or(s[0].spatialReference))),null!=s[1]&&(i.toGeometry=sr(s[1])),t.objectIds?.length&&(i.objectIds=i.objectIds.join(","));const n=(0,ue.Dl)(e),o=(0,ue.lF)({...n.query,f:"json",...i}),a=(0,ue.jV)(o,r),{data:l}=await(0,f.A)(`${n.path}/find`,a);return fe.fromJSON(l)}(r(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new o.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,_.PZ)(Gt,t)).toJSON(),s=(0,ue.Dl)(e),n=(0,ue.lF)({...s.query,f:"json",...i}),o=(0,ue.jV)(n,r),{data:a}=await(0,f.A)(`${s.path}/getImageUrl`,o);return $t.fromJSON(a)}(r(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new mr.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new o.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},async function(e,t,r){t=(0,_.PZ)(Ee,t);const i=(0,ue.Dl)(e),s=t.toJSON();t.outSpatialReference&&(s.outSR=or(t.outSpatialReference));const n=(0,ue.lF)({...i.query,f:"json",...s}),o=(0,ue.jV)(n,r),{data:a}=await(0,f.A)(i.path+"/queryBoundary",o);return $e.fromJSON(a)}(r(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,cr.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,pr.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new o.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},async function(e,t,r){const i=(t=(0,_.PZ)(Xe,t)).toJSON();Xt(i),i.objectIds?.length&&(i.objectIds=i.objectIds.join(",")),i.geometry||i.objectIds||i.time||i.where||(i.where="1=1");const s=await(0,le.el)(t.geometry),n=s?.[0];null!=n&&(i.geometry=sr(n));const o=n?.spatialReference??t.geometry?.spatialReference;o&&(i.inSR=or(o));const a=(0,ue.Dl)(e),l=(0,ue.lF)({...a.query,f:"json",...i}),u=(0,ue.jV)(l,r),{data:p}=await(0,f.A)(`${a.path}/queryGPSInfo`,u);return nt.fromJSON(p)}(r(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,ur.I)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new o.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const p="raster.servicepixelvalue",c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(a=e.outFields.some((e=>!e.toLowerCase().includes(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(p)&&e.length>24)).map((e=>{const t=e.slice(25);return[this._updateRenderingRulesFunctionName(t,c),t]}));l=t.map((e=>new F.A({functionName:e[0]}))),u=t.map((e=>e[1]));const{rasterFunction:r}=this;0===l.length?r?.functionName?(l.push(r),u.push(r.functionName)):l=null:r?.functionName&&!l.some((e=>e.functionName===r.functionName))&&(l.push(r),u.push(r.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let y=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:r}=(0,ie.Rp)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new o.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=r?.timeExtent&&(y=r.timeExtent)}const h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let g=e.geometry;this.version<10.91&&"extent"===g?.type&&(g=Ge.A.fromExtent(g));const f=this._getQueryParams({geometry:g,timeExtent:y,mosaicRule:h,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:r,returnCatalogItems:a,returnGeometry:m,raster:this.raster,maxItemCount:s?1:null});delete f.f;const w=new yt(f);try{await this._generateRasterInfo(this.rasterFunction);const r=await tr(this.url,w,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=null!=r.value&&r.value.toLowerCase().includes("nodata");if(!a||m||!r?.catalogItems?.features.length||!n&&o)return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||"ObjectId",p=r.catalogItems?.features??[],c=p.map((e=>e.attributes?.[l])),d=new mr.A({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),y=await this.queryRasters(d);return y?.features?.length&&y.features.forEach((t=>{p.forEach((r=>{r.attributes[l]===t.attributes[l]&&t.geometry&&(r.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new o.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const i=(0,f.A)(r(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),s=(0,f.A)(r(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),n=await Promise.all([i,s]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):(0,dr.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,ie.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,i=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,ar.Tw)(r(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,ar.E9)(e,t),e))),s=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([i,s,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),p.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,R.wB)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo,{multidimensionalInfo:i}=this.serviceRasterInfo;if(null==e||null==i||null==t||null==r?.startField)return e;const{startField:s}=r,n=i.variables.some((e=>e.dimensions.some((e=>e.name===s))))?s:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),a=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==a||null==l||a===l,p=u?[a||l]:[[a,l]],c=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===n&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=u,e.values=p})):e.multidimensionalDefinition.push(new I.A({variableName:"",dimensionName:n,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new o.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,_.PZ)(mr.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new re.A;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:r}=this;return"unique-value"===e.type&&this._hasRasterFunction(r)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,oe.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:i,ssl:s}=await(0,f.A)(r(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=i,this.sourceJSON=t,s&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new o.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),s=r?.ResampleType||r?.resampleType;return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:r}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,i=(0,oe.I8)({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&r.bandCount>=3){const e=i?.bandIds??(0,oe.ci)(r);!e||3===r.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=i?.renderer??(0,oe.PD)(r,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const s=(0,oe.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=s,this.symbolizer.rasterInfo=r):this.symbolizer=new ae.A({rendererJSON:s,rasterInfo:r}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,se.D)(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const i=await(0,f.A)(r(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return i.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:i,returnImageBitmap:s,signal:n}=e;if(i&&this._canRequestImageElement(t.format)){const i=`${r(this.parsedUrl)}/exportImage`,{data:o}=await(0,f.A)(i,{responseType:s?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:n});return o instanceof Blob?{imageBitmap:await(0,W.m)(o,i,n),params:t}:{imageOrCanvasElement:o,params:t}}const a=this._initJobHandler(),l=(0,f.A)(r(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),u=(await Promise.all([l,a]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,se.g)(u)),!c)throw new o.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:n},d="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,se.D)(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,ie.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new H.A;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),t=t.filter((e=>{let{variableName:t,dimensionName:r}=e;return t&&"*"!==t||r})),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:s,returnDomainValues:n,templateFields:o}=t,a=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map((e=>e.replaceAll(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof r&&r.toLowerCase().includes("nodata"),m=[];if(r&&!l&&!c){const e={};e[p]=0,u=[r],l=[new h.A({geometry:this.fullExtent,attributes:e})]}if(!l)return[];let d,y,g;this._updateResponseFieldNames(l,o),c&&!s&&(l=[]);for(let h=0;h<l.length;h++){if(d=l[h],null!=r){if(y=u[h],g=this.rasterFunction&&a&&a.length>0&&i&&i.length>0&&i.includes(this.rasterFunction.functionName)?a[i.indexOf(this.rasterFunction.functionName)]:r,"nodata"===y.toLowerCase()&&!s)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";d.attributes[e]=y,d.attributes[t]=g,this._updateFeatureWithMagDirValues(d,y);const n=this.fields&&this.fields.length>0;let o=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?n?y:r:g;this.rasterFunction||(o=n?y:r),this._updateFeatureWithRasterAttributeTableValues(d,o)}if(d.sourceLayer=d.layer=this,n&&this._updateFeatureWithDomainValues(d),i&&a&&i.length===a.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];d.attributes[t]=a[e]}m.push(l[h])}return m}_processMultidimensionalIntersection(e,t,r){const{multidimensionalSubset:i}=this;if(!i)return{isOutSide:!1,timeExtent:t,mosaicRule:r=this._combineMosaicRuleWithTimeExtent(r,t)};if(i){const{isOutside:r,intersection:s}=(0,ie.Rp)(i,{geometry:e,timeExtent:t});if(r)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=s?.timeExtent&&(t=s.timeExtent)}if(r=this._combineMosaicRuleWithTimeExtent(r,t),r?.multidimensionalDefinition){const{isOutside:e}=(0,ie.Rp)(i,{multidimensionalDefinition:r.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:r}}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==r)return;const{features:i,fields:s}=r,n=s.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!n)return;const o=i.filter((e=>e.attributes[n]===(null!=t?parseInt(t,10):null)));o&&o[0]&&s.forEach((t=>{const r=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=o[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new ee.A({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new qe.A(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:(0,ne.Lu)([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;null!=r&&e.forEach((e=>{if(e?.attributes)for(const i of t){const t=r.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:r,rasterFunction:i}=this;i&&"rasterFunction"in e&&null==e.rasterFunction&&(e.rasterFunction=i),r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!(!e.spatialReference&&!e.extent?.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&a,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),c=u&&p.includes("basic"),m=this._isMosaicDataset(e)&&t.includes("catalog"),d=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsImageToMap:r>=11.2&&m,supportsImageToMapMultiray:r>=11.2&&m,supportsMapToImage:r>=11.2&&m,supportsFindImages:r>=11.2&&m,supportsGetImageUrl:r>=11.3&&d,supportsMeasure:u,supportsMeasureFromImage:r>=11.2,supportsDownload:d,supportsQuery:m&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&m,supportsComputeAngles:r>=10.91,supportsQueryGPSInfo:r>=11.2&&m,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!i?.supportsStatistics,supportsOrderBy:!!i?.supportsOrderBy,supportsDistinct:!!i?.supportsDistinct,supportsPagination:!!i?.supportsPagination,supportsStandardizedQueriesOnly:!!i?.useStandardizedQueries,supportsPercentileStatistics:!!i?.supportsPercentileStatistics,supportsCentroid:!!i?.supportsReturningGeometryCentroid,supportsDistance:!!i?.supportsQueryWithDistance,supportsExtent:!!i?.supportsReturningQueryExtent,supportsGeometryProperties:!!i?.supportsReturningGeometryProperties,supportsHavingClause:!!i?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!i?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:c,supportsAreaAndPerimeter:c,supportsPointOrCentroid:c,supportsHeightFromBaseAndTop:u&&p.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&p.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&p.includes("top-top shadow height"),supports3D:u&&p.includes("3d")}}}};function r(e){return e?.path??""}return(0,i._)([(0,u.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,i._)([(0,u.MZ)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,i._)([(0,u.MZ)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,i._)([(0,b.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,i._)([(0,u.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,i._)([(0,u.MZ)({type:[_.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,i._)([(0,b.w)("bandIds")],t.prototype,"readBandIds",null),(0,i._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,i._)([(0,b.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,i._)([(0,u.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,i._)([(0,m.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,i._)([(0,u.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,i._)([(0,m.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,i._)([(0,u.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,i._)([(0,u.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,i._)([(0,b.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,i._)([(0,u.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,i._)([(0,u.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,i._)([(0,u.MZ)()],t.prototype,"rasterInfo",void 0),(0,i._)([(0,u.MZ)({readOnly:!0,type:[Y.A]})],t.prototype,"fields",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,i._)([(0,u.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,i._)([(0,b.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,i._)([(0,u.MZ)({type:qe.A})],t.prototype,"fullExtent",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,i._)([(0,u.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,i._)([(0,u.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,i._)([(0,u.MZ)({type:String,json:{type:k.SZ.jsonValues,read:k.SZ.read,write:k.SZ.write}})],t.prototype,"interpolation",void 0),(0,i._)([(0,u.MZ)()],t.prototype,"minScale",void 0),(0,i._)([(0,b.w)("service","minScale")],t.prototype,"readMinScale",null),(0,i._)([(0,u.MZ)()],t.prototype,"maxScale",void 0),(0,i._)([(0,b.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,i._)([(0,u.MZ)({type:H.A})],t.prototype,"mosaicRule",null),(0,i._)([(0,b.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,i._)([(0,m.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,i._)([(0,u.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,i._)([(0,u.MZ)({type:X.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,i._)([(0,u.MZ)({json:{type:_.jz}})],t.prototype,"noData",void 0),(0,i._)([(0,m.K)("noData")],t.prototype,"writeNoData",null),(0,i._)([(0,u.MZ)({type:String,json:{type:k.hm.jsonValues,read:k.hm.read,write:k.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,i._)([(0,u.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,i._)([(0,b.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,i._)([(0,u.MZ)({})],t.prototype,"typeIdField",void 0),(0,i._)([(0,u.MZ)({})],t.prototype,"types",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,i._)([(0,u.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,i._)([(0,u.MZ)()],t.prototype,"raster",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,i._)([(0,b.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,i._)([(0,u.MZ)()],t.prototype,"viewId",void 0),(0,i._)([(0,u.MZ)()],t.prototype,"renderer",null),(0,i._)([(0,u.MZ)({types:g.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:g.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,i._)([(0,b.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,i._)([(0,m.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,i._)([(0,u.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,i._)([(0,u.MZ)(x.ke)],t.prototype,"opacity",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,i._)([(0,u.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,i._)([(0,u.MZ)({type:F.A,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,i._)([(0,b.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,i._)([(0,u.MZ)({readOnly:!0,type:Re.A})],t.prototype,"spatialReference",void 0),(0,i._)([(0,b.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,i._)([(0,u.MZ)({json:{type:k.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,i._)([(0,b.w)("pixelType")],t.prototype,"readPixelType",null),(0,i._)([(0,m.K)("pixelType")],t.prototype,"writePixelType",null),(0,i._)([(0,u.MZ)({constructOnly:!0,type:te.A})],t.prototype,"serviceRasterInfo",void 0),(0,i._)([(0,u.MZ)()],t.prototype,"sourceJSON",void 0),(0,i._)([(0,u.MZ)(x.OZ)],t.prototype,"url",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,i._)([(0,b.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,i._)([(0,c.$)("esri.layers.mixins.ArcGISImageService")],t),t};var fr=r(19502),wr=r(65624),Rr=r(31362),vr=r(11270),_r=r(94729),br=r(8350),Sr=r(21617),xr=r(5682),Ir=r(78817),Mr=r(38278),Fr=r(30973),Ar=r(61701);let Dr=class extends((0,wr.dM)((0,Ir.e)((0,xr.j)((0,vr.q)((0,_r.A)((0,br.H)(gr((0,Sr.J)((0,Rr.d)((0,fr.b)((0,a.P)((0,n.O)(d.A))))))))))))){constructor(){super(...arguments),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,l.sg)((async(e,t,i)=>{const{save:s,saveAs:n}=await r.e(964).then(r.bind(r,20964));switch(e){case Ar.X.SAVE:return s(this,t);case Ar.X.SAVE_AS:return n(this,i,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,r){const i="vector-field"===this.renderer?.type;t[r]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let s=!1,n=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const o=new Set;s&&o.add("raster.itempixelvalue");for(const l of t){const e=l.name.toLowerCase();o.has(e)||e.includes("raster.servicepixelvalue.")||i.add(l.name)}n&&i.add("raster.magnitude").add("raster.direction");const a=(0,Fr.tn)({fields:t,title:r},{...e,visibleFieldNames:i});return a?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&a.fieldInfos.forEach((e=>{let{format:t,fieldName:r}=e;t&&r&&/^raster\.(item|service)pixelvalue/i.test(r)&&(t.places=2)})),a}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Ar.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Ar.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,Mr.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new o.A("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};(0,i._)([(0,u.MZ)(x.fV)],Dr.prototype,"legendEnabled",null),(0,i._)([(0,u.MZ)({type:["show","hide"]})],Dr.prototype,"listMode",null),(0,i._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Dr.prototype,"isReference",void 0),(0,i._)([(0,u.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Dr.prototype,"operationalLayerType",void 0),(0,i._)([(0,m.K)("web-map","operationalLayerType")],Dr.prototype,"writeOperationalLayerType",null),(0,i._)([(0,u.MZ)(x.M6)],Dr.prototype,"popupEnabled",void 0),(0,i._)([(0,u.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Dr.prototype,"popupTemplate",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],Dr.prototype,"defaultPopupTemplate",null),(0,i._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],Dr.prototype,"type",void 0),(0,i._)([(0,u.MZ)({readOnly:!0})],Dr.prototype,"_isPreviewLayer",null),Dr=(0,i._)([(0,c.$)("esri.layers.ImageryLayer")],Dr);const Pr=Dr},20176:(e,t,r)=>{r.d(t,{N3:()=>n,Om:()=>s});var i=r(1484);class s{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0;this.geometry=e,this.attributes=t,this.centroid=r,this.objectId=i,this.displayId=0,this.geohashX=0,this.geohashY=0}static fromJSON(e,t){const r=e.geometry?i.A.fromJSON(e.geometry):null,n=e.centroid?i.A.fromJSON(e.centroid):null,o=e.attributes[t];return new s(r,e.attributes,n,o)}weakClone(){const e=new s(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e.geohashX=this.geohashX,e.geohashY=this.geohashY,e}clone(){const e=this.geometry?.clone(),t=new s(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t.geohashX=this.geohashX,t.geohashY=this.geohashY,t}}function n(e){return!!e.geometry?.coords?.length}},75146:(e,t,r)=>{r.d(t,{A:()=>i});class i{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new i;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},1484:(e,t,r)=>{r.d(t,{A:()=>i});class i{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.lengths=e??[],this.coords=t??[]}static fromJSON(e){return new i(e.lengths,e.coords)}static fromRect(e){const[t,r,s,n]=e,o=s-t,a=n-r;return new i([5],[t,r,o,0,0,a,-o,0,0,-a])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((e,t)=>e+t))}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let r=0;r<this.lengths.length;r++){const i=this.lengths[r];for(let r=0;r<i;r++)e(this.coords[2*(r+t)],this.coords[2*(r+t)+1]);t+=i}}deltaDecode(){const e=this.clone(),{coords:t,lengths:r}=e;let i=0;for(const s of r){for(let e=1;e<s;e++)t[2*(i+e)]+=t[2*(i+e)-2],t[2*(i+e)+1]+=t[2*(i+e)-1];i+=s}return e}clone(e){if(0===this.lengths.length)return new i([],[this.coords[0],this.coords[1]]);const t=2*(0===this.lengths.length?1:this.lengths.reduce(((e,t)=>e+t))),r=this.coords.slice(0,t);return e?(e.set(r),new i(this.lengths,e)):new i(Array.from(this.lengths),Array.from(r))}}},16852:(e,t,r)=>{r.d(t,{C:()=>o,m:()=>n});var i=r(50076),s=r(50346);async function n(e,t,r){let n;try{n=await createImageBitmap(e)}catch(o){throw new i.A("request:server",`Unable to load ${t}`,{url:t,error:o})}return(0,s.Te)(r),n}async function o(e,t,r,n,o){let a;try{a=await createImageBitmap(e)}catch(l){throw new i.A("request:server",`Unable to load tile ${t}/${r}/${n}`,{error:l,level:t,row:r,col:n})}return(0,s.Te)(o),a}},78238:(e,t,r)=>{function i(e){const t={};for(const r in e){if("declaredClass"===r)continue;const s=e[r];if(null!=s&&"function"!=typeof s)if(Array.isArray(s)){t[r]=[];for(let e=0;e<s.length;e++)t[r][e]=i(s[e])}else"object"==typeof s?s.toJSON&&(t[r]=JSON.stringify(s)):t[r]=s}return t}r.d(t,{z:()=>i})},37713:(e,t,r)=>{r.d(t,{I:()=>o});var i=r(54994),s=r(36643),n=r(68295);async function o(e,t,r){const o=(0,i.Dl)(e),{data:a}=await(0,s.gW)(o,n.A.from(t),r);return a.count}},53104:(e,t,r)=>{r.d(t,{V:()=>o});var i=r(54994),s=r(36643),n=r(68295);async function o(e,t,r){const o=(0,i.Dl)(e),{data:a}=await(0,s.Pk)(o,n.A.from(t),r);return a.objectIds}},14009:(e,t,r)=>{r.d(t,{e:()=>l,s:()=>a});var i=r(54994),s=r(36643),n=r(77725),o=r(68295);async function a(e,t,r){const i=await l(e,t,r);return n.A.fromJSON(i)}async function l(e,t,r){const n=(0,i.Dl)(e),a={...r},l=o.A.from(t),{data:u}=await(0,s.eW)(n,l,l.sourceSpatialReference,a);return u}},36643:(e,t,r)=>{r.d(t,{IJ:()=>y,Jf:()=>w,Pk:()=>g,eW:()=>d,gW:()=>f,kS:()=>h});var i=r(3825),s=r(90534),n=r(19902),o=r(1438),a=r(80963),l=r(78238),u=r(89122),p=r(57831);const c="Layer does not support extent calculation.";function m(e,t){const r=e.geometry,i=e.toJSON();delete i.compactGeometryEnabled,delete i.defaultSpatialReferenceEnabled;const s=i;let o,l,u;if(null!=r&&(l=r.spatialReference,u=(0,a.YX)(l),s.geometryType=(0,n.$B)(r),s.geometry=function(e,t){if(t&&"extent"===e.type)return`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`;if(t&&"point"===e.type)return`${e.x},${e.y}`;const r=e.toJSON();return delete r.spatialReference,JSON.stringify(r)}(r,e.compactGeometryEnabled),s.inSR=u),i.groupByFieldsForStatistics&&(s.groupByFieldsForStatistics=i.groupByFieldsForStatistics.join(",")),i.objectIds&&(s.objectIds=i.objectIds.join(",")),i.orderByFields&&(s.orderByFields=i.orderByFields.join(",")),!i.outFields||!i.returnDistinctValues&&(t?.returnCountOnly||t?.returnExtentOnly||t?.returnIdsOnly)?delete s.outFields:i.outFields.includes("*")?s.outFields="*":s.outFields=i.outFields.join(","),i.outSR?(s.outSR=(0,a.YX)(i.outSR),o=e.outSpatialReference):r&&(i.returnGeometry||i.returnCentroid)&&(s.outSR=s.inSR,o=l),i.returnGeometry&&delete i.returnGeometry,i.outStatistics&&(s.outStatistics=JSON.stringify(i.outStatistics)),i.fullText&&(s.fullText=JSON.stringify(i.fullText)),i.pixelSize&&(s.pixelSize=JSON.stringify(i.pixelSize)),i.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=l&&null!=e.quantizationParameters?.extent&&l.equals(e.quantizationParameters.extent.spatialReference)&&delete i.quantizationParameters.extent.spatialReference,s.quantizationParameters=JSON.stringify(i.quantizationParameters)),i.parameterValues&&(s.parameterValues=JSON.stringify(i.parameterValues)),i.rangeValues&&(s.rangeValues=JSON.stringify(i.rangeValues)),i.dynamicDataSource&&(s.layer=JSON.stringify({source:i.dynamicDataSource}),delete i.dynamicDataSource),i.timeExtent){const e=i.timeExtent,{start:t,end:r}=e;null==t&&null==r||(s.time=t===r?t:`${t??"null"},${r??"null"}`),delete i.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=l&&null!=o&&l.equals(o)&&(s.defaultSR=s.inSR,delete s.inSR,delete s.outSR),s}async function d(e,t,r,i){const s=null!=t.timeExtent&&t.timeExtent.isEmpty?{data:{features:[]}}:await R(e,t,"json",i);return(0,p.q)(t,r,s.data),s}async function y(e,t,r,i){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:r.createFeatureResult()};const s=await h(e,t,i),n=s;return n.data=(0,u.m)(s.data,r),n}function h(e,t,r){return R(e,t,"pbf",r)}function g(e,t,r){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):R(e,t,"json",r,{returnIdsOnly:!0})}function f(e,t,r){return null!=t.timeExtent&&t.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):R(e,t,"json",r,{returnIdsOnly:!0,returnCountOnly:!0})}async function w(e,t,r){if(null!=t.timeExtent&&t.timeExtent.isEmpty)return{data:{count:0,extent:null}};const i=await R(e,t,"json",r,{returnExtentOnly:!0,returnCountOnly:!0}),s=i.data;if(s.hasOwnProperty("extent"))return i;if(s.features)throw new Error(c);if(s.hasOwnProperty("count"))throw new Error(c);return i}async function R(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const u="string"==typeof e?(0,s.An)(e):e,p=t.geometry?[t.geometry]:[],c=await(0,o.el)(p,null,{signal:n.signal}),d=c?.[0];null!=d&&((t=t.clone()).geometry=d);const y=(0,l.z)({...u.query,f:r,...a,...m(t,a)});return(0,i.A)((0,s.fj)(u.path,(h=a,null==t.formatOf3DObjects||h.returnCountOnly||h.returnExtentOnly||h.returnIdsOnly?"query":"query3d")),{...n,responseType:"pbf"===r?"array-buffer":"json",query:{...y,...n.query}});var h}}}]);
//# sourceMappingURL=7333.a52c67d6.chunk.js.map