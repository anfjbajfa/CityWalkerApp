"use strict";(self.webpackChunkcity_walk_app=self.webpackChunkcity_walk_app||[]).push([[621],{80621:(e,t,r)=>{r.r(t),r.d(t,{default:()=>B});var o=r(70273),l=(r(77844),r(42494)),i=(r(95026),r(80757)),n=r(55678),a=r(65930),s=r(68313),y=r(25457),p=r(3008),u=r(67519),d=(r(27052),r(11434),r(35097)),c=r(55292),f=r(8597),m=r(60510),g=r(23423),h=r(3875),b=r(38609),S=r(80394),w=r(26391),O=r(97719),M=r(71556),_=r(67846),N=r(94452),L=r(52851),v=r(89136),J=r(1105),T=r(68597),C=r(67553),x=r(69806),I=r(2573),Z=r(34614),A=r(76607);function j(e){return"markup"===e.featureCollectionType||e.layers.some((e=>null!=e.layerDefinition.visibilityField||!E(e)))}function E(e){let{layerDefinition:t,featureSet:r}=e;const o=t.geometryType??r.geometryType;return k.find((e=>o===e.geometryTypeJSON&&t.drawingInfo?.renderer?.symbol?.type===e.identifyingSymbol.type))}function R(){return new A.A({xmin:-180,ymin:-90,xmax:180,ymax:90})}const D=new J.A({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),P=new J.A({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0,length:255});let G=class extends w.A{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?null==t?(0,m.projectOrLoad)(R(),e).geometry:(0,g.w1)(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=(0,g.Ie)();return this.graphics.forEach((r=>{const o=null!=r.geometry?(0,m.projectOrLoad)(r.geometry,e).geometry:null;null!=o&&(0,g.fT)(t,"point"===o.type?o:o.extent,t)})),(0,g.aI)(t,g.qv)?null:t}get sublayers(){return this.graphics}};(0,o._)([(0,u.MZ)({readOnly:!0})],G.prototype,"fullExtent",null),(0,o._)([(0,u.MZ)({readOnly:!0})],G.prototype,"fullBounds",null),(0,o._)([(0,u.MZ)({readOnly:!0})],G.prototype,"sublayers",null),(0,o._)([(0,u.MZ)()],G.prototype,"layer",void 0),(0,o._)([(0,u.MZ)()],G.prototype,"layerId",void 0),(0,o._)([(0,u.MZ)({readOnly:!0})],G.prototype,"visibilityMode",void 0),G=(0,o._)([(0,c.$)("esri.layers.MapNotesLayer.MapNotesSublayer")],G);const k=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new T.default).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new C.default).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new x.default).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new x.default).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new I.A).toJSON()}];let F=class extends((0,_.dM)((0,v.j)((0,N.q)((0,L.A)((0,s.P)(O.A)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=Z.A.WGS84,this.sublayers=new i.A(k.map((e=>new G({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!j(t)&&"portal-item"!==r?.origin}}}readFeatureCollections(e,t,r){if(!j(t))return null;const o=t.layers.map((e=>{const t=new S.default;return t.read(e,r),t}));return new i.A({items:o})}readLegacyfeatureCollectionJSON(e,t){return j(t)?(0,a.o8)(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=(0,g.Ie)();return null!=this.sublayers?this.sublayers.forEach((e=>{let{fullBounds:r}=e;return null!=r?(0,g.fT)(t,r,t):t}),t):this.featureCollectionJSON?.layers.some((e=>e.layerDefinition.extent))&&this.featureCollectionJSON.layers.forEach((r=>{const o=(0,m.projectOrLoad)(r.layerDefinition.extent,e).geometry;null!=o&&(0,g.fT)(t,o,t)})),(0,g.aI)(t,g.qv)?(0,m.projectOrLoad)(R(),e).geometry:(0,g.w1)(t,e)}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?Z.A.fromJSON(t.layers[0].layerDefinition.spatialReference):Z.A.WGS84}readSublayers(e,t,r){if(j(t))return null;const o=[];let n=t.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const i of t.layers){const{layerDefinition:e,featureSet:t}=i,r=e.id??n++,a=E(i);if(null!=a){const i=new G({id:a.id,title:e.name,layerId:r,layer:this,graphics:t.features.map((e=>{let{geometry:t,symbol:r,attributes:o,popupInfo:i}=e;return l.A.fromJSON({attributes:o,geometry:t,symbol:r,popupTemplate:i})}))});o.push(i)}}return new i.A(o)}writeSublayers(e,t,r,o){const{minScale:l,maxScale:i}=this;if(null==e)return;const a=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(a&&o?.messages?.push(new n.A("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const s=[];let p=this.spatialReference.toJSON();e:for(const n of e)for(const e of n.graphics)if(null!=e.geometry){p=e.geometry.spatialReference.toJSON();break e}for(const n of k){const t=e.find((e=>n.id===e.id));this._writeMapNoteSublayer(s,t,n,l,i,p,o)}(0,y.sM)("featureCollection.layers",s,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=(0,a.o8)(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(null==this.sublayers)return;let e=null;const t=[];for(const o of this.sublayers)for(const r of o.graphics)if(null!=r.geometry){const o=r.geometry;e?(0,b.aI)(o.spatialReference,e)||((0,m.canProjectWithoutEngine)(o.spatialReference,e)||(0,m.isLoaded)()||await(0,m.load)(),r.geometry=(0,m.project)(o,e)):e=o.spatialReference,t.push(r)}const r=await(0,h.el)(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){return null==this.sublayers?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,r,o,l,i,n){const s=[];if(null!=t){for(const e of t.graphics)this._writeMapNote(s,e,r.geometryType,n);this._normalizeObjectIds(s,D),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:(0,a.o8)(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:"OBJECTID",fields:[D.toJSON(),P.toJSON()],spatialReference:i},featureSet:{features:s,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,o){if(null==t)return;const{geometry:l,symbol:i,popupTemplate:n}=t;if(null==l)return;if(l.type!==r)return void o?.messages?.push(new p.A("map-notes-layer:invalid-geometry-type",`Geometry "${l.type}" cannot be saved in "${r}" layer`,{graphic:t}));if(null==i)return void o?.messages?.push(new p.A("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t}));const a={attributes:{...t.attributes},geometry:l.toJSON(),symbol:i.toJSON()};null!=n&&(a.popupInfo=n.toJSON()),e.push(a)}_normalizeObjectIds(e,t){const r=t.name;let o=(0,M.H)(r,e)+1;const l=new Set;for(const i of e){i.attributes||(i.attributes={});const{attributes:e}=i;(null==e[r]||l.has(e[r]))&&(e[r]=o++),l.add(e[r])}}};(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"capabilities",void 0),(0,o._)([(0,d.w)(["portal-item","web-map"],"capabilities",["layers"])],F.prototype,"readCapabilities",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"featureCollections",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"featureCollections",["layers"])],F.prototype,"readFeatureCollections",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],F.prototype,"featureCollectionJSON",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],F.prototype,"readLegacyfeatureCollectionJSON",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],F.prototype,"featureCollectionType",void 0),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"fullExtent",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],F.prototype,"legendEnabled",void 0),(0,o._)([(0,u.MZ)({type:["show","hide","hide-children"]})],F.prototype,"listMode",void 0),(0,o._)([(0,u.MZ)({type:Number,nonNullable:!0,json:{write:!1}})],F.prototype,"minScale",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"minScale",["layers"])],F.prototype,"readMinScale",null),(0,o._)([(0,u.MZ)({type:Number,nonNullable:!0,json:{write:!1}})],F.prototype,"maxScale",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"maxScale",["layers"])],F.prototype,"readMaxScale",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"multipointLayer",null),(0,o._)([(0,u.MZ)({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],F.prototype,"operationalLayerType",void 0),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"pointLayer",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"polygonLayer",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"polylineLayer",null),(0,o._)([(0,u.MZ)({type:Z.A})],F.prototype,"spatialReference",void 0),(0,o._)([(0,d.w)(["web-map","portal-item"],"spatialReference",["layers"])],F.prototype,"readSpatialReference",null),(0,o._)([(0,u.MZ)({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],F.prototype,"sublayers",void 0),(0,o._)([(0,d.w)("web-map","sublayers",["layers"])],F.prototype,"readSublayers",null),(0,o._)([(0,f.K)("web-map","sublayers")],F.prototype,"writeSublayers",null),(0,o._)([(0,u.MZ)({readOnly:!0})],F.prototype,"textLayer",null),(0,o._)([(0,u.MZ)()],F.prototype,"title",void 0),(0,o._)([(0,u.MZ)({readOnly:!0,json:{read:!1}})],F.prototype,"type",void 0),F=(0,o._)([(0,c.$)("esri.layers.MapNotesLayer")],F);const B=F},71556:(e,t,r)=>{r.d(t,{H:()=>l,L:()=>o});const o=1;function l(e,t){let r=0;for(const o of t){const t=o.attributes?.[e];"number"==typeof t&&isFinite(t)&&(r=Math.max(r,t))}return r}}}]);
//# sourceMappingURL=621.444d55de.chunk.js.map